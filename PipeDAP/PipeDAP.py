import torch
from torchvision import models
import numpy as np
import time

class Node:
    def __init__(self, data):
        self.data = data  # data
        self.next = None  # next node
        return

    def has_value(self, value):
        if self.data == value:
            return True
        else:
            return False


class SingleLink():
    def __init__(self):
        self.head = None
        self.tail = None
        self.length = 0
        return

    # 链表是否为空
    def is_empty(self):
        return self.length == 0

    def add_node(self, item):
        if not isinstance(item, Node):
            item = Node(item)
        if self.head is None:
            self.head = item
            self.tail = item
        else:
            self.tail.next = item
            self.tail = item
        self.length += 1
        return

    def insert_node(self, index, data):
        if self.is_empty():
            print("this link is empty")
            return
        if index < 0 or index >= self.length:
            print("error:out of index")
            return
        item = Node(data)
        if index == 0:
            item.next = self.head
            self.head = item
            self.length += 1
            return
        j = 0
        node = self.head
        prev = self.head
        while node.next and j < index:
            prev = node
            node = node.next
            j += 1
        if j == index:
            item.next = node
            prev.next = item
            self.length += 1

    def reorder_node(self, m, n):
        if self.is_empty():
            print("this link is empty")
            return
        n_ag = str(n+1)+'_ag'
        m_rs = str(m+1)+'_rs'

        node = self.head
        prev = self.head
        while node.data != n_ag:
            prev = node
            node = node.next
        if node.data == n_ag:
            prev.next = node.next

        node = self.head
        while node.data != m_rs:
            node = node.next
        if node.data == m_rs:
            item = Node(n_ag)
            item.next = node.next
            node.next = item


    def print_link(self):
        current_node = self.head
        schedule_order = []
        while current_node is not None:
            if 'rs' in current_node.data:
                schedule_order.append('reduceScatter-group-' + str(int(current_node.data.replace("_rs", ""))-1))
            else:
                schedule_order.append('allGather-group-' + str(int(current_node.data.replace("_ag", ""))-1))
            current_node = current_node.next
        return schedule_order

def Init_layer_wise_time(dnn):
    if dnn == 'vgg16':
        M = [64, 1728, 64, 36864, 128, 73728, 128, 147456, 256, 294912, 256, 589824, 256, 589824, 512, 1179648, 512, 2359296, 512, 2359296, 512, 2359296, 512, 2359296, 512, 2359296, 102760448, 4096, 16777216, 4096, 4096000, 1000]
        t_b = [0.0015785932540893556, 0.027803077697753906, 0.0004145097732543945, 0.09699729919433593, 0.0001851034164428711, 0.034733152389526366, 0.00020002365112304688, 0.04890509128570557, 0.00010653018951416015, 0.016385822296142577, 0.00011010646820068359, 0.02673660755157471, 9.642124176025391e-05, 0.028287143707275392, 7.150650024414063e-05, 0.012406158447265624, 9.49859619140625e-05, 0.021436915397644044, 9.675025939941407e-05, 0.02232081413269043, 7.061481475830078e-05, 0.007442488670349121, 7.529735565185547e-05, 0.007453927993774414, 8.227825164794922e-05, 0.009192252159118652, 7.407188415527344e-05, 0.0041840744018554685, 4.08029556274414e-05, 0.0008257627487182617, 4.426002502441406e-05, 0.0008132505416870117]
        t_f = [8.216717116632254e-08, 2.2185136214907084e-06, 8.216717116632254e-08, 4.732829059180178e-05, 1.6433434233264508e-07, 9.465658118360356e-05, 1.6433434233264508e-07, 0.00018931316236720712, 3.2866868466529015e-07, 0.00037862632473441423, 3.2866868466529015e-07, 0.0007572526494688285, 3.2866868466529015e-07, 0.0007572526494688285, 6.573373693305803e-07, 0.001514505298937657, 6.573373693305803e-07, 0.003029010597875314, 6.573373693305803e-07, 0.003029010597875314, 6.573373693305803e-07, 0.003029010597875314, 6.573373693305803e-07, 0.003029010597875314, 6.573373693305803e-07, 0.003029010597875314, 0.13193023937412476, 5.2586989546446424e-06, 0.021539630918224455, 5.2586989546446424e-06, 0.005258698954644642, 1.2838620494737896e-06]

        model = models.vgg16()
        names = []
        for name, params in model.named_parameters():
            names.append(name)
        parameter_groups = [['features.0.weight', 'features.0.bias'], ['features.2.weight', 'features.2.bias'],
                            ['features.5.weight', 'features.5.bias'], ['features.7.weight', 'features.7.bias'],
                            ['features.10.weight', 'features.10.bias'], ['features.12.weight', 'features.12.bias'],
                            ['features.14.weight', 'features.14.bias'], ['features.17.weight', 'features.17.bias'],
                            ['features.19.weight', 'features.19.bias'], ['features.21.weight', 'features.21.bias'],
                            ['features.24.weight', 'features.24.bias'], ['features.26.weight', 'features.26.bias'],
                            ['features.28.weight', 'features.28.bias'], ['classifier.0.weight', 'classifier.0.bias'],
                            ['classifier.3.weight', 'classifier.3.bias'], ['classifier.6.weight', 'classifier.6.bias']]
    elif dnn == 'resnet50':
        M = [9408, 64, 64, 4096, 64, 64, 36864, 64, 64, 16384, 256, 256, 16384, 256, 256, 16384, 64, 64, 36864, 64, 64, 16384, 256, 256, 16384, 64, 64, 36864, 64, 64, 16384, 256, 256, 32768, 128, 128, 147456, 128, 128, 65536, 512, 512, 131072, 512, 512, 65536, 128, 128, 147456, 128, 128, 65536, 512, 512, 65536, 128, 128, 147456, 128, 128, 65536, 512, 512, 65536, 128, 128, 147456, 128, 128, 65536, 512, 512, 131072, 256, 256, 589824, 256, 256, 262144, 1024, 1024, 524288, 1024, 1024, 262144, 256, 256, 589824, 256, 256, 262144, 1024, 1024, 262144, 256, 256, 589824, 256, 256, 262144, 1024, 1024, 262144, 256, 256, 589824, 256, 256, 262144, 1024, 1024, 262144, 256, 256, 589824, 256, 256, 262144, 1024, 1024, 262144, 256, 256, 589824, 256, 256, 262144, 1024, 1024, 524288, 512, 512, 2359296, 512, 512, 1048576, 2048, 2048, 2097152, 2048, 2048, 1048576, 512, 512, 2359296, 512, 512, 1048576, 2048, 2048, 1048576, 512, 512, 2359296, 512, 512, 1048576, 2048, 2048, 2048000, 1000]
        t_b = [0.004015994071960449, 0.0006299734115600586, 0.00686495304107666, 0.0025342321395874024, 0.00022321701049804688, 0.0013801765441894532, 0.004449334144592285, 0.000268549919128418, 0.0016086006164550781, 0.0035871171951293943, 0.0007789039611816406, 0.003993358612060547, 0.003931121826171875, 0.0002711915969848633, 0.004532375335693359, 0.00544126033782959, 0.0004952621459960938, 0.0017566728591918946, 0.004496698379516602, 5.706310272216797e-05, 0.0012174463272094727, 0.0036172914505004884, 7.027149200439453e-05, 0.004225034713745118, 0.005118184089660645, 4.5161247253417966e-05, 0.0012113046646118164, 0.004508247375488281, 3.580570220947266e-05, 0.001212949752807617, 0.0036224794387817384, 5.828380584716797e-05, 0.0042204618453979496, 0.006057844161987304, 4.506111145019531e-05, 0.0020122432708740232, 0.006605758666992188, 2.6926994323730468e-05, 0.0005423545837402344, 0.002547268867492676, 3.636837005615234e-05, 0.0013356876373291015, 0.00635378360748291, 4.06646728515625e-05, 0.0019685983657836913, 0.003066244125366211, 2.7284622192382812e-05, 0.0005352115631103516, 0.002072329521179199, 2.842426300048828e-05, 0.0005401802062988281, 0.0025510501861572264, 4.131317138671875e-05, 0.0019790172576904298, 0.003070535659790039, 2.7728080749511718e-05, 0.0005386161804199218, 0.002076888084411621, 2.8977394104003908e-05, 0.0005516767501831055, 0.0025645017623901365, 3.990650177001953e-05, 0.0019665288925170897, 0.003083000183105469, 2.5887489318847656e-05, 0.0005440235137939454, 0.0020827054977416992, 2.6297569274902343e-05, 0.0005454301834106445, 0.0025617218017578124, 4.107475280761719e-05, 0.001995525360107422, 0.005267529487609863, 3.520965576171875e-05, 0.001098036766052246, 0.005416560173034668, 2.5153160095214844e-05, 0.00033247947692871093, 0.0025891971588134764, 3.344535827636719e-05, 0.00075714111328125, 0.006707963943481446, 3.0827522277832034e-05, 0.00105593204498291, 0.0027532148361206054, 2.4967193603515625e-05, 0.00032294273376464843, 0.0020922374725341796, 2.2878646850585936e-05, 0.000331120491027832, 0.0025725221633911134, 3.076553344726562e-05, 0.0010577964782714844, 0.002755112648010254, 2.3703575134277344e-05, 0.00032435894012451173, 0.002092576026916504, 2.387046813964844e-05, 0.00033234119415283204, 0.00259335994720459, 3.429412841796875e-05, 0.0010468816757202147, 0.0027597427368164064, 2.242565155029297e-05, 0.0003252363204956055, 0.002092776298522949, 2.276897430419922e-05, 0.00032863616943359377, 0.002591061592102051, 3.405570983886719e-05, 0.0010495281219482422, 0.0027597379684448243, 2.4733543395996093e-05, 0.00032405853271484376, 0.0021016645431518556, 2.5348663330078123e-05, 0.0003331136703491211, 0.002590756416320801, 3.673076629638672e-05, 0.0010566091537475585, 0.0027530860900878908, 2.4170875549316405e-05, 0.00032977581024169923, 0.0020908689498901367, 2.55584716796875e-05, 0.00033376216888427737, 0.0025715017318725586, 3.5409927368164065e-05, 0.001073002815246582, 0.0050603532791137695, 2.8042793273925782e-05, 0.0005951499938964843, 0.006066102981567383, 2.4170875549316405e-05, 0.00022043704986572267, 0.002712059020996094, 3.05938720703125e-05, 0.0004948568344116211, 0.007087616920471191, 3.157615661621094e-05, 0.0006066083908081055, 0.002863750457763672, 2.4056434631347658e-05, 0.00021823406219482423, 0.0019431352615356446, 2.463817596435547e-05, 0.0002132129669189453, 0.002711758613586426, 3.2262802124023436e-05, 0.0006085968017578125, 0.0028792762756347655, 2.6497840881347656e-05, 0.0008021831512451172, 0.0021308565139770506, 2.8781890869140625e-05, 0.00023140907287597657, 0.003197331428527832, 0.00024172306060791016, 0.001124730110168457, 5.172252655029297e-05, 0.0008015251159667969]
        t_f = [3.038555275119584e-05, 2.0670444048432542e-07, 2.0670444048432542e-07, 1.3229084190996827e-05, 2.0670444048432542e-07, 2.0670444048432542e-07, 0.00011906175771897145, 2.0670444048432542e-07, 2.0670444048432542e-07, 5.291633676398731e-05, 8.268177619373017e-07, 8.268177619373017e-07, 5.291633676398731e-05, 8.268177619373017e-07, 8.268177619373017e-07, 5.291633676398731e-05, 2.0670444048432542e-07, 2.0670444048432542e-07, 0.00011906175771897145, 2.0670444048432542e-07, 2.0670444048432542e-07, 5.291633676398731e-05, 8.268177619373017e-07, 8.268177619373017e-07, 5.291633676398731e-05, 2.0670444048432542e-07, 2.0670444048432542e-07, 0.00011906175771897145, 2.0670444048432542e-07, 2.0670444048432542e-07, 5.291633676398731e-05, 8.268177619373017e-07, 8.268177619373017e-07, 0.00010583267352797462, 4.1340888096865085e-07, 4.1340888096865085e-07, 0.0004762470308758858, 4.1340888096865085e-07, 4.1340888096865085e-07, 0.00021166534705594923, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.00042333069411189847, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.00021166534705594923, 4.1340888096865085e-07, 4.1340888096865085e-07, 0.0004762470308758858, 4.1340888096865085e-07, 4.1340888096865085e-07, 0.00021166534705594923, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.00021166534705594923, 4.1340888096865085e-07, 4.1340888096865085e-07, 0.0004762470308758858, 4.1340888096865085e-07, 4.1340888096865085e-07, 0.00021166534705594923, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.00021166534705594923, 4.1340888096865085e-07, 4.1340888096865085e-07, 0.0004762470308758858, 4.1340888096865085e-07, 4.1340888096865085e-07, 0.00021166534705594923, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.00042333069411189847, 8.268177619373017e-07, 8.268177619373017e-07, 0.0019049881235035432, 8.268177619373017e-07, 8.268177619373017e-07, 0.0008466613882237969, 3.3072710477492068e-06, 3.3072710477492068e-06, 0.0016933227764475939, 3.3072710477492068e-06, 3.3072710477492068e-06, 0.0008466613882237969, 8.268177619373017e-07, 8.268177619373017e-07, 0.0019049881235035432, 8.268177619373017e-07, 8.268177619373017e-07, 0.0008466613882237969, 3.3072710477492068e-06, 3.3072710477492068e-06, 0.0008466613882237969, 8.268177619373017e-07, 8.268177619373017e-07, 0.0019049881235035432, 8.268177619373017e-07, 8.268177619373017e-07, 0.0008466613882237969, 3.3072710477492068e-06, 3.3072710477492068e-06, 0.0008466613882237969, 8.268177619373017e-07, 8.268177619373017e-07, 0.0019049881235035432, 8.268177619373017e-07, 8.268177619373017e-07, 0.0008466613882237969, 3.3072710477492068e-06, 3.3072710477492068e-06, 0.0008466613882237969, 8.268177619373017e-07, 8.268177619373017e-07, 0.0019049881235035432, 8.268177619373017e-07, 8.268177619373017e-07, 0.0008466613882237969, 3.3072710477492068e-06, 3.3072710477492068e-06, 0.0008466613882237969, 8.268177619373017e-07, 8.268177619373017e-07, 0.0019049881235035432, 8.268177619373017e-07, 8.268177619373017e-07, 0.0008466613882237969, 3.3072710477492068e-06, 3.3072710477492068e-06, 0.0016933227764475939, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.007619952494014173, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.0033866455528951877, 6.6145420954984135e-06, 6.6145420954984135e-06, 0.0067732911057903755, 6.6145420954984135e-06, 6.6145420954984135e-06, 0.0033866455528951877, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.007619952494014173, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.0033866455528951877, 6.6145420954984135e-06, 6.6145420954984135e-06, 0.0033866455528951877, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.007619952494014173, 1.6536355238746034e-06, 1.6536355238746034e-06, 0.0033866455528951877, 6.6145420954984135e-06, 6.6145420954984135e-06, 0.006614542095498413, 3.2297568825675846e-06]

        model = models.resnet50()
        names = []
        for name, params in model.named_parameters():
            names.append(name)
        parameter_groups = [['conv1.weight'], ['bn1.weight', 'bn1.bias'], ['layer1.0.conv1.weight'], ['layer1.0.bn1.weight', 'layer1.0.bn1.bias'], ['layer1.0.conv2.weight'], ['layer1.0.bn2.weight', 'layer1.0.bn2.bias'], ['layer1.0.conv3.weight'], ['layer1.0.bn3.weight', 'layer1.0.bn3.bias'], ['layer1.0.downsample.0.weight'], ['layer1.0.downsample.1.weight', 'layer1.0.downsample.1.bias'], ['layer1.1.conv1.weight'], ['layer1.1.bn1.weight', 'layer1.1.bn1.bias'], ['layer1.1.conv2.weight'], ['layer1.1.bn2.weight', 'layer1.1.bn2.bias'], ['layer1.1.conv3.weight'], ['layer1.1.bn3.weight', 'layer1.1.bn3.bias'], ['layer1.2.conv1.weight'], ['layer1.2.bn1.weight', 'layer1.2.bn1.bias'], ['layer1.2.conv2.weight'], ['layer1.2.bn2.weight', 'layer1.2.bn2.bias'], ['layer1.2.conv3.weight'], ['layer1.2.bn3.weight', 'layer1.2.bn3.bias'], ['layer2.0.conv1.weight'], ['layer2.0.bn1.weight', 'layer2.0.bn1.bias'], ['layer2.0.conv2.weight'], ['layer2.0.bn2.weight', 'layer2.0.bn2.bias'], ['layer2.0.conv3.weight'], ['layer2.0.bn3.weight', 'layer2.0.bn3.bias'], ['layer2.0.downsample.0.weight'], ['layer2.0.downsample.1.weight', 'layer2.0.downsample.1.bias'], ['layer2.1.conv1.weight'], ['layer2.1.bn1.weight', 'layer2.1.bn1.bias'], ['layer2.1.conv2.weight'], ['layer2.1.bn2.weight', 'layer2.1.bn2.bias'], ['layer2.1.conv3.weight'], ['layer2.1.bn3.weight', 'layer2.1.bn3.bias'], ['layer2.2.conv1.weight'], ['layer2.2.bn1.weight', 'layer2.2.bn1.bias'], ['layer2.2.conv2.weight'], ['layer2.2.bn2.weight', 'layer2.2.bn2.bias'], ['layer2.2.conv3.weight'], ['layer2.2.bn3.weight', 'layer2.2.bn3.bias'], ['layer2.3.conv1.weight'], ['layer2.3.bn1.weight', 'layer2.3.bn1.bias'], ['layer2.3.conv2.weight'], ['layer2.3.bn2.weight', 'layer2.3.bn2.bias'], ['layer2.3.conv3.weight'], ['layer2.3.bn3.weight', 'layer2.3.bn3.bias'], ['layer3.0.conv1.weight'], ['layer3.0.bn1.weight', 'layer3.0.bn1.bias'], ['layer3.0.conv2.weight'], ['layer3.0.bn2.weight', 'layer3.0.bn2.bias'], ['layer3.0.conv3.weight'], ['layer3.0.bn3.weight', 'layer3.0.bn3.bias'], ['layer3.0.downsample.0.weight'], ['layer3.0.downsample.1.weight', 'layer3.0.downsample.1.bias'], ['layer3.1.conv1.weight'], ['layer3.1.bn1.weight', 'layer3.1.bn1.bias'], ['layer3.1.conv2.weight'], ['layer3.1.bn2.weight', 'layer3.1.bn2.bias'], ['layer3.1.conv3.weight'], ['layer3.1.bn3.weight', 'layer3.1.bn3.bias'], ['layer3.2.conv1.weight'], ['layer3.2.bn1.weight', 'layer3.2.bn1.bias'], ['layer3.2.conv2.weight'], ['layer3.2.bn2.weight', 'layer3.2.bn2.bias'], ['layer3.2.conv3.weight'], ['layer3.2.bn3.weight', 'layer3.2.bn3.bias'], ['layer3.3.conv1.weight'], ['layer3.3.bn1.weight', 'layer3.3.bn1.bias'], ['layer3.3.conv2.weight'], ['layer3.3.bn2.weight', 'layer3.3.bn2.bias'], ['layer3.3.conv3.weight'], ['layer3.3.bn3.weight', 'layer3.3.bn3.bias'], ['layer3.4.conv1.weight'], ['layer3.4.bn1.weight', 'layer3.4.bn1.bias'], ['layer3.4.conv2.weight'], ['layer3.4.bn2.weight', 'layer3.4.bn2.bias'], ['layer3.4.conv3.weight'], ['layer3.4.bn3.weight', 'layer3.4.bn3.bias'], ['layer3.5.conv1.weight'], ['layer3.5.bn1.weight', 'layer3.5.bn1.bias'], ['layer3.5.conv2.weight'], ['layer3.5.bn2.weight', 'layer3.5.bn2.bias'], ['layer3.5.conv3.weight'], ['layer3.5.bn3.weight', 'layer3.5.bn3.bias'], ['layer4.0.conv1.weight'], ['layer4.0.bn1.weight', 'layer4.0.bn1.bias'], ['layer4.0.conv2.weight'], ['layer4.0.bn2.weight', 'layer4.0.bn2.bias'], ['layer4.0.conv3.weight'], ['layer4.0.bn3.weight', 'layer4.0.bn3.bias'], ['layer4.0.downsample.0.weight'], ['layer4.0.downsample.1.weight', 'layer4.0.downsample.1.bias'], ['layer4.1.conv1.weight'], ['layer4.1.bn1.weight', 'layer4.1.bn1.bias'], ['layer4.1.conv2.weight'], ['layer4.1.bn2.weight', 'layer4.1.bn2.bias'], ['layer4.1.conv3.weight'], ['layer4.1.bn3.weight', 'layer4.1.bn3.bias'], ['layer4.2.conv1.weight'], ['layer4.2.bn1.weight', 'layer4.2.bn1.bias'], ['layer4.2.conv2.weight'], ['layer4.2.bn2.weight', 'layer4.2.bn2.bias'], ['layer4.2.conv3.weight'], ['layer4.2.bn3[1,0]<stdout>:.weight', 'layer4.2.bn3.bias'], ['fc.weight', 'fc.bias']]
    elif dnn == 'densenet201':
        M = [9408, 64, 64, 64, 64, 8192, 128, 128, 36864, 96, 96, 12288, 128, 128, 36864, 128, 128, 16384, 128, 128, 36864, 160, 160, 20480, 128, 128, 36864, 192, 192, 24576, 128, 128, 36864, 224, 224, 28672, 128, 128, 36864, 256, 256, 32768, 128, 128, 16384, 128, 128, 36864, 160, 160, 20480, 128, 128, 36864, 192, 192, 24576, 128, 128, 36864, 224, 224, 28672, 128, 128, 36864, 256, 256, 32768, 128, 128, 36864, 288, 288, 36864, 128, 128, 36864, 320, 320, 40960, 128, 128, 36864, 352, 352, 45056, 128, 128, 36864, 384, 384, 49152, 128, 128, 36864, 416, 416, 53248, 128, 128, 36864, 448, 448, 57344, 128, 128, 36864, 480, 480, 61440, 128, 128, 36864, 512, 512, 131072, 256, 256, 32768, 128, 128, 36864, 288, 288, 36864, 128, 128, 36864, 320, 320, 40960, 128, 128, 36864, 352, 352, 45056, 128, 128, 36864, 384, 384, 49152, 128, 128, 36864, 416, 416, 53248, 128, 128, 36864, 448, 448, 57344, 128, 128, 36864, 480, 480, 61440, 128, 128, 36864, 512, 512, 65536, 128, 128, 36864, 544, 544, 69632, 128, 128, 36864, 576, 576, 73728, 128, 128, 36864, 608, 608, 77824, 128, 128, 36864, 640, 640, 81920, 128, 128, 36864, 672, 672, 86016, 128, 128, 36864, 704, 704, 90112, 128, 128, 36864, 736, 736, 94208, 128, 128, 36864, 768, 768, 98304, 128, 128, 36864, 800, 800, 102400, 128, 128, 36864, 832, 832, 106496, 128, 128, 36864, 864, 864, 110592, 128, 128, 36864, 896, 896, 114688, 128, 128, 36864, 928, 928, 118784, 128, 128, 36864, 960, 960, 122880, 128, 128, 36864, 992, 992, 126976, 128, 128, 36864, 1024, 1024, 131072, 128, 128, 36864, 1056, 1056, 135168, 128, 128, 36864, 1088, 1088, 139264, 128, 128, 36864, 1120, 1120, 143360, 128, 128, 36864, 1152, 1152, 147456, 128, 128, 36864, 1184, 1184, 151552, 128, 128, 36864, 1216, 1216, 155648, 128, 128, 36864, 1248, 1248, 159744, 128, 128, 36864, 1280, 1280, 163840, 128, 128, 36864, 1312, 1312, 167936, 128, 128, 36864, 1344, 1344, 172032, 128, 128, 36864, 1376, 1376, 176128, 128, 128, 36864, 1408, 1408, 180224, 128, 128, 36864, 1440, 1440, 184320, 128, 128, 36864, 1472, 1472, 188416, 128, 128, 36864, 1504, 1504, 192512, 128, 128, 36864, 1536, 1536, 196608, 128, 128, 36864, 1568, 1568, 200704, 128, 128, 36864, 1600, 1600, 204800, 128, 128, 36864, 1632, 1632, 208896, 128, 128, 36864, 1664, 1664, 212992, 128, 128, 36864, 1696, 1696, 217088, 128, 128, 36864, 1728, 1728, 221184, 128, 128, 36864, 1760, 1760, 225280, 128, 128, 36864, 1792, 1792, 1605632, 896, 896, 114688, 128, 128, 36864, 928, 928, 118784, 128, 128, 36864, 960, 960, 122880, 128, 128, 36864, 992, 992, 126976, 128, 128, 36864, 1024, 1024, 131072, 128, 128, 36864, 1056, 1056, 135168, 128, 128, 36864, 1088, 1088, 139264, 128, 128, 36864, 1120, 1120, 143360, 128, 128, 36864, 1152, 1152, 147456, 128, 128, 36864, 1184, 1184, 151552, 128, 128, 36864, 1216, 1216, 155648, 128, 128, 36864, 1248, 1248, 159744, 128, 128, 36864, 1280, 1280, 163840, 128, 128, 36864, 1312, 1312, 167936, 128, 128, 36864, 1344, 1344, 172032, 128, 128, 36864, 1376, 1376, 176128, 128, 128, 36864, 1408, 1408, 180224, 128, 128, 36864, 1440, 1440, 184320, 128, 128, 36864, 1472, 1472, 188416, 128, 128, 36864, 1504, 1504, 192512, 128, 128, 36864, 1536, 1536, 196608, 128, 128, 36864, 1568, 1568, 200704, 128, 128, 36864, 1600, 1600, 204800, 128, 128, 36864, 1632, 1632, 208896, 128, 128, 36864, 1664, 1664, 212992, 128, 128, 36864, 1696, 1696, 217088, 128, 128, 36864, 1728, 1728, 221184, 128, 128, 36864, 1760, 1760, 225280, 128, 128, 36864, 1792, 1792, 229376, 128, 128, 36864, 1824, 1824, 233472, 128, 128, 36864, 1856, 1856, 237568, 128, 128, 36864, 1888, 1888, 241664, 128, 128, 36864, 1920, 1920, 1920000, 1000]
        t_b = [0.0021088266372680663, 3.635883331298828e-05, 0.00337613582611084, 2.49481201171875e-05, 0.0007646846771240235, 0.0009570646286010742, 2.510547637939453e-05, 0.000983128547668457, 0.002477002143859863, 2.6755332946777343e-05, 0.0010401868820190429, 0.001358041763305664, 2.6774406433105468e-05, 0.0009900331497192383, 0.002460651397705078, 2.5815963745117188e-05, 0.0012880516052246093, 0.0014335107803344726, 2.6645660400390626e-05, 0.0009854173660278321, 0.002457895278930664, 2.734184265136719e-05, 0.001560511589050293, 0.0018221998214721679, 2.7327537536621095e-05, 0.0009901142120361328, 0.0024429893493652342, 2.9606819152832033e-05, 0.001867971420288086, 0.0018705415725708008, 2.6068687438964845e-05, 0.0009868288040161134, 0.002440056800842285, 2.998828887939453e-05, 0.002138376235961914, 0.002366042137145996, 2.6774406433105468e-05, 0.0009822463989257813, 0.0024462890625, 3.1375885009765624e-05, 0.0020496034622192382, 0.0032391786575317384, 2.09808349609375e-05, 0.0003597688674926758, 0.0004201459884643555, 2.2683143615722656e-05, 0.00028088092803955076, 0.0007199525833129882, 2.239704132080078e-05, 0.0004282665252685547, 0.0005724191665649414, 2.391815185546875e-05, 0.00028241634368896484, 0.0007220649719238281, 2.3922920227050782e-05, 0.0005029964447021484, 0.0005867958068847656, 2.2754669189453124e-05, 0.00028055667877197266, 0.0007221555709838867, 2.651214599609375e-05, 0.0005752277374267578, 0.0007068443298339843, 2.2096633911132814e-05, 0.0002832460403442383, 0.0007202482223510742, 2.640247344970703e-05, 0.0007008886337280273, 0.0007165861129760742, 2.1672248840332033e-05, 0.0002826404571533203, 0.0007213211059570313, 2.6788711547851562e-05, 0.0007688283920288086, 0.0008435249328613281, 2.1820068359375e-05, 0.00028164386749267577, 0.000721435546875, 2.6187896728515626e-05, 0.000833582878112793, 0.0008571624755859375, 2.1886825561523437e-05, 0.00028162479400634766, 0.0007237577438354492, 2.4580955505371092e-05, 0.000898284912109375, 0.0009824275970458985, 2.4199485778808594e-05, 0.0002865791320800781, 0.0007270240783691407, 2.7418136596679688e-05, 0.0009577131271362305, 0.0009898757934570313, 2.323150634765625e-05, 0.00028398036956787107, 0.0007254695892333985, 2.6450157165527343e-05, 0.0010430574417114257, 0.0011173534393310548, 2.415180206298828e-05, 0.00028262615203857424, 0.0007294654846191406, 2.9120445251464844e-05, 0.0010980463027954101, 0.0011300516128540038, 2.2602081298828124e-05, 0.000284113883972168, 0.0007322788238525391, 2.737998962402344e-05, 0.0011751556396484375, 0.0012533760070800781, 2.3550987243652344e-05, 0.0002841806411743164, 0.0007419729232788086, 2.7484893798828125e-05, 0.0009969043731689452, 0.002728252410888672, 1.9965171813964843e-05, 0.00020831584930419922, 0.0002609729766845703, 2.094268798828125e-05, 0.00011162757873535156, 0.00026654720306396485, 2.086639404296875e-05, 0.00023464202880859374, 0.00028951168060302733, 1.97601318359375e-05, 0.00011224269866943359, 0.00026685714721679687, 2.1677017211914063e-05, 0.00025385379791259766, 0.0002915191650390625, 2.0813941955566406e-05, 0.00011173725128173829, 0.0002622652053833008, 2.1543502807617187e-05, 0.0002686119079589844, 0.0003254985809326172, 2.052783966064453e-05, 0.00011387825012207031, 0.00026642799377441407, 2.3360252380371095e-05, 0.00028555870056152344, 0.00032495975494384766, 2.0346641540527345e-05, 0.00011027812957763672, 0.0002633380889892578, 2.1033287048339843e-05, 0.0003050327301025391, 0.0003574371337890625, 2.014636993408203e-05, 0.0001129293441772461, 0.0002701568603515625, 2.2563934326171875e-05, 0.0003176403045654297, 0.00036402225494384764, 2.0122528076171876e-05, 0.00011216640472412109, 0.0002680158615112305, 2.5510787963867188e-05, 0.0003436279296875, 0.0004028749465942383, 2.1147727966308594e-05, 0.00011167526245117187, 0.0002653312683105469, 2.353191375732422e-05, 0.0003729963302612305, 0.00041025638580322266, 2.1796226501464844e-05, 0.00011560440063476562, 0.00037509918212890624, 2.5272369384765625e-05, 0.0003924703598022461, 0.00043992996215820314, 0.0001296377182006836, 0.00011685848236083984, 0.00027046680450439455, 2.8104782104492186e-05, 0.0004110813140869141, 0.000445098876953125, 2.2444725036621094e-05, 0.00011462688446044921, 0.00027031898498535155, 2.552032470703125e-05, 0.00042590141296386716, 0.0004730796813964844, 2.1209716796875e-05, 0.00011391639709472657, 0.0002661037445068359, 2.506732940673828e-05, 0.00044462680816650393, 0.00047746181488037107, 2.1958351135253905e-05, 0.00011295795440673827, 0.0002696943283081055, 2.5420188903808595e-05, 0.0004635906219482422, 0.000596609115600586, 2.417564392089844e-05, 0.00022567272186279296, 0.0002677154541015625, 2.8505325317382813e-05, 0.00048330783843994143, 0.0005103111267089844, 2.4003982543945314e-05, 0.00011458396911621094, 0.00026947021484375, 2.6302337646484373e-05, 0.0005125379562377929, 0.0005523490905761718, 2.2664070129394532e-05, 0.00011965274810791016, 0.0002665138244628906, 2.536773681640625e-05, 0.0005324316024780273, 0.0005481100082397461, 2.1610260009765625e-05, 0.00011470317840576172, 0.000269160270690918, 2.8219223022460937e-05, 0.0005544614791870117, 0.0005774116516113282, 2.3150444030761717e-05, 0.00012043952941894532, 0.0002693796157836914, 2.974510192871094e-05, 0.0005784654617309571, 0.0005849361419677735, 2.1333694458007813e-05, 0.00011614322662353515, 0.0002718496322631836, 2.6040077209472656e-05, 0.0005873155593872071, 0.000620107650756836, 2.1715164184570312e-05, 0.00011799335479736328, 0.00027458667755126954, 2.727985382080078e-05, 0.0006038618087768555, 0.0006265974044799804, 2.2377967834472656e-05, 0.00011486530303955077, 0.0002717304229736328, 2.9845237731933595e-05, 0.0006229925155639648, 0.000656123161315918, 2.0685195922851564e-05, 0.00011853218078613282, 0.0002719306945800781, 3.062248229980469e-05, 0.0006441402435302734, 0.000665740966796875, 0.0001349782943725586, 0.00011950492858886719, 0.00027200222015380857, 2.892017364501953e-05, 0.0006739139556884765, 0.0006906747817993164, 2.2006034851074218e-05, 0.00011728763580322266, 0.00027143001556396485, 2.8476715087890624e-05, 0.0007026147842407227, 0.0006958103179931641, 2.451896667480469e-05, 0.00011893272399902343, 0.00027318954467773436, 2.842426300048828e-05, 0.0007080745697021485, 0.0007262563705444336, 2.094745635986328e-05, 0.00011672496795654296, 0.00027441978454589844, 3.0040740966796875e-05, 0.0007313203811645508, 0.0007338285446166992, 2.460002899169922e-05, 0.0002277231216430664, 0.000376734733581543, 3.006458282470703e-05, 0.0007676219940185547, 0.000766916275024414, 2.9244422912597655e-05, 0.00012514591217041015, 0.00027413368225097655, 0.00013318538665771484, 0.0007775688171386719, 0.0008732986450195313, 2.5763511657714844e-05, 0.0001228904724121094, 0.000278019905090332, 3.1290054321289065e-05, 0.0007865715026855468, 0.0008054113388061523, 3.0493736267089845e-05, 0.00022118091583251954, 0.0002798891067504883, 3.8447380065917967e-05, 0.0009306383132934571, 0.0009487199783325195, 2.5005340576171874e-05, 0.00012342453002929686, 0.0003884124755859375, 0.00029983043670654295, 0.0010494613647460938, 0.0009618282318115234, 0.00013572216033935547, 0.0003548097610473633, 0.000410919189453125, 4.015445709228515e-05, 0.0009727859497070312, 0.0008504581451416015, 3.0469894409179687e-05, 0.00012922286987304688, 0.0003843545913696289, 4.45556640625e-05, 0.0009604263305664063, 0.0008746814727783203, 0.00013152122497558593, 0.00012482166290283202, 0.00028428077697753904, 4.961967468261719e-05, 0.0011490583419799805, 0.0008883237838745117, 0.00013442516326904298, 0.00012677669525146485, 0.00038138389587402346, 5.050182342529297e-05, 0.0009200906753540039, 0.0009140729904174805, 2.6717185974121094e-05, 0.0002355480194091797, 0.000282135009765625, 4.270076751708984e-05, 0.0010169696807861327, 0.000922989845275879, 0.00011896610260009766, 0.00011995792388916015, 0.000286097526550293, 0.00013727664947509765, 0.0009560346603393555, 0.001043257713317871, 0.0002394247055053711, 0.0001266956329345703, 0.00037132740020751954, 4.2548179626464846e-05, 0.001078648567199707, 0.0010514068603515625, 0.00013047218322753906, 0.0001303863525390625, 0.0005900335311889649, 0.00019545555114746093, 0.0009942865371704102, 0.0010800981521606446, 3.7622451782226565e-05, 0.00026283740997314455, 0.0003804636001586914, 4.3931007385253904e-05, 0.0010226821899414062, 0.0010893535614013672, 2.463817596435547e-05, 0.00012339115142822265, 0.0002790212631225586, 4.567146301269531e-05, 0.0010258054733276367, 0.0010250949859619142, 2.349376678466797e-05, 0.00012258529663085937, 0.00027907371520996093, 3.480434417724609e-05, 0.00105987548828125, 0.0010303544998168945, 2.175331115722656e-05, 0.00011826515197753907, 0.00028104305267333984, 3.112316131591797e-05, 0.0011046886444091796, 0.00105806827545166, 2.3097991943359374e-05, 0.00012337207794189454, 0.0002795743942260742, 3.3736228942871094e-05, 0.0011170673370361327, 0.001071786880493164, 2.1843910217285157e-05, 0.00012330532073974608, 0.0002816343307495117, 3.3097267150878905e-05, 0.001130952835083008, 0.0010956811904907226, 2.2907257080078125e-05, 0.00012221813201904297, 0.00028324127197265625, 3.370285034179688e-05, 0.001157383918762207, 0.0011051368713378906, 2.2969245910644532e-05, 0.00012281417846679688, 0.00029148578643798826, 3.396987915039062e-05, 0.0011516141891479493, 0.0011359596252441407, 2.41851806640625e-05, 0.00012193679809570312, 0.0003182411193847656, 3.2067298889160156e-05, 0.000926666259765625, 0.007339510917663574, 2.346038818359375e-05, 0.00017756462097167969, 0.0002821874618530273, 2.0961761474609375e-05, 8.784294128417969e-05, 0.00017017364501953125, 2.178668975830078e-05, 0.0001758241653442383, 0.0002888154983520508, 2.1419525146484376e-05, 8.70656967163086e-05, 0.00016767024993896484, 2.1839141845703124e-05, 0.000181732177734375, 0.0002934074401855469, 2.1042823791503907e-05, 8.553028106689453e-05, 0.00016579151153564453, 2.117156982421875e-05, 0.00018388748168945312, 0.0003040266036987305, 2.1376609802246093e-05, 9.014129638671875e-05, 0.0001686239242553711, 2.270221710205078e-05, 0.00018919944763183592, 0.00031093597412109377, 2.161979675292969e-05, 8.540153503417968e-05, 0.00016518115997314454, 2.227306365966797e-05, 0.00019772529602050782, 0.00032040119171142576, 2.17437744140625e-05, 8.509635925292969e-05, 0.00016850948333740234, 2.337455749511719e-05, 0.00019474029541015624, 0.00032618522644042966, 2.1452903747558595e-05, 8.722782135009766e-05, 0.0001682281494140625, 2.2830963134765626e-05, 0.0002009868621826172, 0.0003295755386352539, 2.101421356201172e-05, 8.709907531738281e-05, 0.0001694345474243164, 2.421855926513672e-05, 0.00021420955657958985, 0.0003381919860839844, 2.055644989013672e-05, 8.85629653930664e-05, 0.00017329692840576172, 2.2816658020019532e-05, 0.00021577835083007812, 0.00034576892852783203, 2.0966529846191406e-05, 8.826255798339843e-05, 0.00017020702362060546, 2.1529197692871093e-05, 0.00021706581115722658, 0.00035416126251220704, 2.3298263549804687e-05, 9.459972381591796e-05, 0.00017006874084472657, 2.1982192993164063e-05, 0.00021978378295898438, 0.0003473472595214844, 1.9898414611816405e-05, 8.694171905517579e-05, 0.0001684093475341797, 2.403736114501953e-05, 0.0002213144302368164, 0.0003498697280883789, 2.0551681518554688e-05, 8.647441864013672e-05, 0.0001715087890625, 2.231597900390625e-05, 0.0002273416519165039, 0.0003512430191040039, 2.2373199462890626e-05, 8.36181640625e-05, 0.00016920566558837892, 2.4399757385253907e-05, 0.00023250579833984376, 0.0003621101379394531, 2.2826194763183593e-05, 8.803844451904297e-05, 0.0001698160171508789, 2.3283958435058593e-05, 0.00023641586303710938, 0.0003638792037963867, 2.048969268798828e-05, 8.78763198852539e-05, 0.0001711606979370117, 2.288341522216797e-05, 0.00024096488952636718, 0.00036812782287597655, 2.0818710327148436e-05, 8.955955505371093e-05, 0.00016955375671386718, 2.352714538574219e-05, 0.00024538040161132814, 0.0003987407684326172, 2.0971298217773436e-05, 9.204864501953125e-05, 0.0001683473587036133, 2.403736114501953e-05, 0.0002539825439453125, 0.00040629386901855466, 2.2306442260742188e-05, 9.090900421142578e-05, 0.00017044544219970703, 2.291679382324219e-05, 0.00025896549224853517, 0.00040898799896240236, 2.113819122314453e-05, 8.576393127441407e-05, 0.00017276763916015625, 2.4881362915039062e-05, 0.0002595043182373047, 0.0004162883758544922, 2.209186553955078e-05, 8.973121643066407e-05, 0.00016769886016845703, 2.261638641357422e-05, 0.0002608776092529297, 0.00041880607604980467, 2.2377967834472656e-05, 8.660316467285156e-05, 0.00017221450805664064, 2.6531219482421875e-05, 0.0002745532989501953, 0.0004298496246337891, 2.1567344665527342e-05, 9.160995483398438e-05, 0.00017702579498291016, 2.6006698608398437e-05, 0.0002733325958251953, 0.0004437589645385742, 2.2344589233398437e-05, 9.00411605834961e-05, 0.00017434120178222656, 2.2826194763183593e-05, 0.0002775478363037109, 0.00045247554779052733, 2.1219253540039062e-05, 8.703708648681641e-05, 0.00016764163970947265, 2.354145050048828e-05, 0.00028065681457519533, 0.0004524946212768555, 2.1023750305175783e-05, 8.88204574584961e-05, 0.00017232418060302734, 2.6416778564453124e-05, 0.00028691768646240236, 0.00046171188354492186, 2.1829605102539063e-05, 9.512901306152344e-05, 0.00017238140106201171, 2.3756027221679688e-05, 0.0002934074401855469, 0.00046524524688720706, 2.254962921142578e-05, 8.949756622314453e-05, 0.00017340660095214845, 2.43377685546875e-05, 0.0003005075454711914, 0.00047149658203125, 2.3980140686035156e-05, 8.908271789550781e-05, 0.0001764392852783203, 2.5224685668945312e-05, 0.00030039310455322267, 0.0004817962646484375, 2.2287368774414063e-05, 9.360790252685547e-05, 0.00018149852752685547, 2.6011466979980467e-05, 0.0003088665008544922, 0.0004919576644897461, 2.030372619628906e-05, 9.294986724853516e-05, 0.00018742561340332031, 2.5148391723632813e-05, 0.00031697750091552734, 0.0005242156982421875, 2.4280548095703126e-05, 0.00010499477386474609, 0.00026892662048339845, 3.2510757446289066e-05, 0.0005090951919555664, 4.870891571044922e-05, 0.0019624805450439453]
        t_f = [0.00023102979756897294, 1.5716312759794079e-06, 1.5716312759794079e-06, 1.5716312759794079e-06, 1.5716312759794079e-06, 0.0002011688033253642, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.357446913969112e-06, 2.357446913969112e-06, 0.0003017532049880463, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0004023376066507284, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.92907818994852e-06, 3.92907818994852e-06, 0.0005029220083134106, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.714893827938224e-06, 4.714893827938224e-06, 0.0006035064099760926, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 5.500709465927928e-06, 5.500709465927928e-06, 0.0007040908116387747, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 6.2865251039176314e-06, 6.2865251039176314e-06, 0.0008046752133014568, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0004023376066507284, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.92907818994852e-06, 3.92907818994852e-06, 0.0005029220083134106, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.714893827938224e-06, 4.714893827938224e-06, 0.0006035064099760926, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 5.500709465927928e-06, 5.500709465927928e-06, 0.0007040908116387747, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 6.2865251039176314e-06, 6.2865251039176314e-06, 0.0008046752133014568, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 7.072340741907335e-06, 7.072340741907335e-06, 0.0009052596149641389, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 7.85815637989704e-06, 7.85815637989704e-06, 0.0010058440166268211, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 8.643972017886745e-06, 8.643972017886745e-06, 0.0011064284182895033, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 9.429787655876448e-06, 9.429787655876448e-06, 0.0012070128199521853, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.0215603293866152e-05, 1.0215603293866152e-05, 0.0013075972216148675, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.1001418931855855e-05, 1.1001418931855855e-05, 0.0014081816232775495, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.1787234569845558e-05, 1.1787234569845558e-05, 0.0015087660249402314, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.2573050207835263e-05, 1.2573050207835263e-05, 0.0032187008532058273, 6.2865251039176314e-06, 6.2865251039176314e-06, 0.0008046752133014568, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 7.072340741907335e-06, 7.072340741907335e-06, 0.0009052596149641389, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 7.85815637989704e-06, 7.85815637989704e-06, 0.0010058440166268211, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 8.643972017886745e-06, 8.643972017886745e-06, 0.0011064284182895033, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 9.429787655876448e-06, 9.429787655876448e-06, 0.0012070128199521853, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.0215603293866152e-05, 1.0215603293866152e-05, 0.0013075972216148675, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.1001418931855855e-05, 1.1001418931855855e-05, 0.0014081816232775495, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.1787234569845558e-05, 1.1787234569845558e-05, 0.0015087660249402314, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.2573050207835263e-05, 1.2573050207835263e-05, 0.0016093504266029136, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.3358865845824968e-05, 1.3358865845824968e-05, 0.0017099348282655958, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.414468148381467e-05, 1.414468148381467e-05, 0.0018105192299282778, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.4930497121804375e-05, 1.4930497121804375e-05, 0.00191110363159096, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.571631275979408e-05, 1.571631275979408e-05, 0.0020116880332536422, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.650212839778378e-05, 1.650212839778378e-05, 0.002112272434916324, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.728794403577349e-05, 1.728794403577349e-05, 0.0022128568365790066, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.807375967376319e-05, 1.807375967376319e-05, 0.0023134412382416884, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.8859575311752895e-05, 1.8859575311752895e-05, 0.0024140256399043706, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 1.96453909497426e-05, 1.96453909497426e-05, 0.0025146100415670528, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.0431206587732304e-05, 2.0431206587732304e-05, 0.002615194443229735, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.1217022225722006e-05, 2.1217022225722006e-05, 0.0027157788448924167, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.200283786371171e-05, 2.200283786371171e-05, 0.002816363246555099, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.2788653501701415e-05, 2.2788653501701415e-05, 0.002916947648217781, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.3574469139691116e-05, 2.3574469139691116e-05, 0.003017532049880463, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.4360284777680824e-05, 2.4360284777680824e-05, 0.0031181164515431455, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.5146100415670526e-05, 2.5146100415670526e-05, 0.0032187008532058273, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.593191605366023e-05, 2.593191605366023e-05, 0.0033192852548685095, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.6717731691649935e-05, 2.6717731691649935e-05, 0.0034198696565311917, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.750354732963964e-05, 2.750354732963964e-05, 0.003520454058193874, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.828936296762934e-05, 2.828936296762934e-05, 0.0036210384598565556, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.9075178605619046e-05, 2.9075178605619046e-05, 0.003721622861519238, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.986099424360875e-05, 2.986099424360875e-05, 0.00382220726318192, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.0646809881598455e-05, 3.0646809881598455e-05, 0.003922791664844602, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.143262551958816e-05, 3.143262551958816e-05, 0.0040233760665072844, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.2218441157577864e-05, 3.2218441157577864e-05, 0.004123960468169967, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.300425679556756e-05, 3.300425679556756e-05, 0.004224544869832648, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.3790072433557274e-05, 3.3790072433557274e-05, 0.004325129271495331, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.457588807154698e-05, 3.457588807154698e-05, 0.004425713673158013, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.5361703709536676e-05, 3.5361703709536676e-05, 0.0045262980748206946, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.614751934752638e-05, 3.614751934752638e-05, 0.004626882476483377, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.6933334985516086e-05, 3.6933334985516086e-05, 0.004727466878146059, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.771915062350579e-05, 3.771915062350579e-05, 0.004828051279808741, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.8504966261495495e-05, 3.8504966261495495e-05, 0.004928635681471423, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.92907818994852e-05, 3.92907818994852e-05, 0.0050292200831341055, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.00765975374749e-05, 4.00765975374749e-05, 0.005129804484796787, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.086241317546461e-05, 4.086241317546461e-05, 0.00523038888645947, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.1648228813454314e-05, 4.1648228813454314e-05, 0.005330973288122152, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.243404445144401e-05, 4.243404445144401e-05, 0.0054315576897848335, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.3219860089433716e-05, 4.3219860089433716e-05, 0.005532142091447516, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.400567572742342e-05, 4.400567572742342e-05, 0.03942908545177139, 2.200283786371171e-05, 2.200283786371171e-05, 0.002816363246555099, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.2788653501701415e-05, 2.2788653501701415e-05, 0.002916947648217781, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.3574469139691116e-05, 2.3574469139691116e-05, 0.003017532049880463, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.4360284777680824e-05, 2.4360284777680824e-05, 0.0031181164515431455, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.5146100415670526e-05, 2.5146100415670526e-05, 0.0032187008532058273, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.593191605366023e-05, 2.593191605366023e-05, 0.0033192852548685095, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.6717731691649935e-05, 2.6717731691649935e-05, 0.0034198696565311917, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.750354732963964e-05, 2.750354732963964e-05, 0.003520454058193874, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.828936296762934e-05, 2.828936296762934e-05, 0.0036210384598565556, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.9075178605619046e-05, 2.9075178605619046e-05, 0.003721622861519238, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 2.986099424360875e-05, 2.986099424360875e-05, 0.00382220726318192, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.0646809881598455e-05, 3.0646809881598455e-05, 0.003922791664844602, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.143262551958816e-05, 3.143262551958816e-05, 0.0040233760665072844, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.2218441157577864e-05, 3.2218441157577864e-05, 0.004123960468169967, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.300425679556756e-05, 3.300425679556756e-05, 0.004224544869832648, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.3790072433557274e-05, 3.3790072433557274e-05, 0.004325129271495331, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.457588807154698e-05, 3.457588807154698e-05, 0.004425713673158013, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.5361703709536676e-05, 3.5361703709536676e-05, 0.0045262980748206946, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.614751934752638e-05, 3.614751934752638e-05, 0.004626882476483377, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.6933334985516086e-05, 3.6933334985516086e-05, 0.004727466878146059, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.771915062350579e-05, 3.771915062350579e-05, 0.004828051279808741, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.8504966261495495e-05, 3.8504966261495495e-05, 0.004928635681471423, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 3.92907818994852e-05, 3.92907818994852e-05, 0.0050292200831341055, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.00765975374749e-05, 4.00765975374749e-05, 0.005129804484796787, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.086241317546461e-05, 4.086241317546461e-05, 0.00523038888645947, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.1648228813454314e-05, 4.1648228813454314e-05, 0.005330973288122152, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.243404445144401e-05, 4.243404445144401e-05, 0.0054315576897848335, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.3219860089433716e-05, 4.3219860089433716e-05, 0.005532142091447516, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.400567572742342e-05, 4.400567572742342e-05, 0.005632726493110198, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.4791491365413125e-05, 4.4791491365413125e-05, 0.00573331089477288, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.557730700340283e-05, 4.557730700340283e-05, 0.005833895296435562, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.6363122641392535e-05, 4.6363122641392535e-05, 0.0059344796980982445, 3.1432625519588157e-06, 3.1432625519588157e-06, 0.0009052596149641389, 4.714893827938223e-05, 4.714893827938223e-05, 0.047148938279382234, 2.455673868717825e-05]

        model = models.densenet201()
        names = []
        for name, params in model.named_parameters():
            names.append(name)
        parameter_groups = [['features.conv0.weight'], ['features.norm0.weight', 'features.norm0.bias'], ['features.denseblock1.denselayer1.norm1.weight', 'features.denseblock1.denselayer1.norm1.bias'], ['features.denseblock1.denselayer1.conv1.weight'], ['features.denseblock1.denselayer1.norm2.weight', 'features.denseblock1.denselayer1.norm2.bias'], ['features.denseblock1.denselayer1.conv2.weight'], ['features.denseblock1.denselayer2.norm1.weight', 'features.denseblock1.denselayer2.norm1.bias'], ['features.denseblock1.denselayer2.conv1.weight'], ['features.denseblock1.denselayer2.norm2.weight', 'features.denseblock1.denselayer2.norm2.bias'], ['features.denseblock1.denselayer2.conv2.weight'], ['features.denseblock1.denselayer3.norm1.weight', 'features.denseblock1.denselayer3.norm1.bias'], ['features.denseblock1.denselayer3.conv1.weight'], ['features.denseblock1.denselayer3.norm2.weight', 'features.denseblock1.denselayer3.norm2.bias'], ['features.denseblock1.denselayer3.conv2.weight'], ['features.denseblock1.denselayer4.norm1.weight', 'features.denseblock1.denselayer4.norm1.bias'], ['features.denseblock1.denselayer4.conv1.weight'], ['features.denseblock1.denselayer4.norm2.weight', 'features.denseblock1.denselayer4.norm2.bias'], ['features.denseblock1.denselayer4.conv2.weight'], ['features.denseblock1.denselayer5.norm1.weight', 'features.denseblock1.denselayer5.norm1.bias'], ['features.denseblock1.denselayer5.conv1.weight'], ['features.denseblock1.denselayer5.norm2.weight', 'features.denseblock1.denselayer5.norm2.bias'], ['features.denseblock1.denselayer5.conv2.weight'], ['features.denseblock1.denselayer6.norm1.weight', 'features.denseblock1.denselayer6.norm1.bias'], ['features.denseblock1.denselayer6.conv1.weight'], ['features.denseblock1.denselayer6.norm2.weight', 'features.denseblock1.denselayer6.norm2.bias'], ['features.denseblock1.denselayer6.conv2.weight'], ['features.transition1.norm.weight', 'features.transition1.norm.bias'], ['features.transition1.conv.weight'], ['features.denseblock2.denselayer1.norm1.weight', 'features.denseblock2.denselayer1.norm1.bias'], ['features.denseblock2.denselayer1.conv1.weight'], ['features.denseblock2.denselayer1.norm2.weight', 'features.denseblock2.denselayer1.norm2.bias'], ['features.denseblock2.denselayer1.conv2.weight'], ['features.denseblock2.denselayer2.norm1.weight', 'features.denseblock2.denselayer2.norm1.bias'], ['features.denseblock2.denselayer2.conv1.weight'], ['features.denseblock2.denselayer2.norm2.weight', 'features.denseblock2.denselayer2.norm2.bias'], ['features.denseblock2.denselayer2.conv2.weight'], ['features.denseblock2.denselayer3.norm1.weight', 'features.denseblock2.denselayer3.norm1.bias'], ['features.denseblock2.denselayer3.conv1.weight'], ['features.denseblock2.denselayer3.norm2.weight', 'features.denseblock2.denselayer3.norm2.bias'], ['features.denseblock2.denselayer3.conv2.weight'], ['features.denseblock2.denselayer4.norm1.weight', 'features.denseblock2.denselayer4.norm1.bias'], ['features.denseblock2.denselayer4.conv1.weight'], ['features.denseblock2.denselayer4.norm2.weight', 'features.denseblock2.denselayer4.norm2.bias'], ['features.denseblock2.denselayer4.conv2.weight'], ['features.denseblock2.denselayer5.norm1.weight', 'features.denseblock2.denselayer5.norm1.bias'], ['features.denseblock2.denselayer5.conv1.weight'], ['features.denseblock2.denselayer5.norm2.weight', 'features.denseblock2.denselayer5.norm2.bias'], ['features.denseblock2.denselayer5.conv2.weight'], ['features.denseblock2.denselayer6.norm1.weight', 'features.denseblock2.denselayer6.norm1.bias'], ['features.denseblock2.denselayer6.conv1.weight'], ['features.denseblock2.denselayer6.norm2.weight', 'features.denseblock2.denselayer6.norm2.bias'], ['features.denseblock2.denselayer6.conv2.weight'], ['features.denseblock2.denselayer7.norm1.weight', 'features.denseblock2.denselayer7.norm1.bias'], ['features.denseblock2.denselayer7.conv1.weight'], ['features.denseblock2.denselayer7.norm2.weight', 'features.denseblock2.denselayer7.norm2.bias'], ['features.denseblock2.denselayer7.conv2.weight'], ['features.dens[1,0]<stdout>:eblock2.denselayer8.norm1.weight', 'features.denseblock2.denselayer8.norm1.bias'], ['features.denseblock2.denselayer8.conv1.weight'], ['features.denseblock2.denselayer8.norm2.weight', 'features.denseblock2.denselayer8.norm2.bias'], ['features.denseblock2.denselayer8.conv2.weight'], ['features.denseblock2.denselayer9.norm1.weight', 'features.denseblock2.denselayer9.norm1.bias'], ['features.denseblock2.denselayer9.conv1.weight'], ['features.denseblock2.denselayer9.norm2.weight', 'features.denseblock2.denselayer9.norm2.bias'], ['features.denseblock2.denselayer9.conv2.weight'], ['features.denseblock2.denselayer10.norm1.weight', 'features.denseblock2.denselayer10.norm1.bias'], ['features.denseblock2.denselayer10.conv1.weight'], ['features.denseblock2.denselayer10.norm2.weight', 'features.denseblock2.denselayer10.norm2.bias'], ['features.denseblock2.denselayer10.conv2.weight'], ['features.denseblock2.denselayer11.norm1.weight', 'features.denseblock2.denselayer11.norm1.bias'], ['features.denseblock2.denselayer11.conv1.weight'], ['features.denseblock2.denselayer11.norm2.weight', 'features.denseblock2.denselayer11.norm2.bias'], ['features.denseblock2.denselayer11.conv2.weight'], ['features.denseblock2.denselayer12.norm1.weight', 'features.denseblock2.denselayer12.norm1.bias'], ['features.denseblock2.denselayer12.conv1.weight'], ['features.denseblock2.denselayer12.norm2.weight', 'features.denseblock2.denselayer12.norm2.bias'], ['features.denseblock2.denselayer12.conv2.weight'], ['features.transition2.norm.weight', 'features.transition2.norm.bias'], ['features.transition2.conv.weight'], ['features.denseblock3.denselayer1.norm1.weight', 'features.denseblock3.denselayer1.norm1.bias'], ['features.denseblock3.denselayer1.conv1.weight'], ['features.denseblock3.denselayer1.norm2.weight', 'features.denseblock3.denselayer1.norm2.bias'], ['features.denseblock3.denselayer1.conv2.weight'], ['features.denseblock3.denselayer2.norm1.weight', 'features.denseblock3.denselayer2.norm1.bias'], ['features.denseblock3.denselayer2.conv1.weight'], ['features.denseblock3.denselayer2.norm2.weight', 'features.denseblock3.denselayer2.norm2.bias'], ['features.denseblock3.denselayer2.conv2.weight'], ['features.denseblock3.denselayer3.norm1.weight', 'features.denseblock3.denselayer3.norm1.bias'], ['features.denseblock3.denselayer3.conv1.weight'], ['features.denseblock3.denselayer3.norm2.weight', 'features.denseblock3.denselayer3.norm2.bias'], ['features.denseblock3.denselayer3.conv2.weight'], ['features.denseblock3.denselayer4.norm1.weight', 'features.denseblock3.denselayer4.norm1.bias'], ['features.denseblock3.denselayer4.conv1.weight'], ['features.denseblock3.denselayer4.norm2.weight', 'features.denseblock3.denselayer4.norm2.bias'], ['features.denseblock3.denselayer4.conv2.weight'], ['features.denseblock3.denselayer5.norm1.weight', 'features.denseblock3.denselayer5.norm1.bias'], ['features.denseblock3.denselayer5.conv1.weight'], ['features.denseblock3.denselayer5.norm2.weight', 'features.denseblock3.denselayer5.norm2.bias'], ['features.denseblock3.denselayer5.conv2.weight'], ['features.denseblock3.denselayer6.norm1.weight', 'features.denseblock3.denselayer6.norm1.bias'], ['features.denseblock3.denselayer6.conv1.weight'], ['features.denseblock3.denselayer6.norm2.weight', 'features.denseblock3.denselayer6.norm2.bias'], ['features.denseblock3.denselayer6.conv2.weight'], ['features.denseblock3.denselayer7.norm1.weight', 'features.denseblock3.denselayer7.norm1.bias'], ['features.denseblock3.denselayer7.conv1.weight'], ['features.denseblock3.denselayer7.norm2.weight', 'features.denseblock3.denselayer7.norm2.bias'], ['features.denseblock3.denselayer7.conv2.weight'], ['features.denseblock3.denselayer8.norm1.weight', 'features.denseblock3.denselayer8.norm1.bias'], ['features.denseblock3.denselayer8.conv1.weight'], ['features.denseblock3.denselayer8.norm2.weight', 'features.denseblock3.denselayer8.norm2.bias'], ['features.denseblock3.denselayer8.conv2.weight'], ['features.denseblock3.denselayer9.norm1.weight', 'features.denseblock3.denselayer9.norm1.bias'], ['features[1,0]<stdout>:.denseblock3.denselayer9.conv1.weight'], ['features.denseblock3.denselayer9.norm2.weight', 'features.denseblock3.denselayer9.norm2.bias'], ['features.denseblock3.denselayer9.conv2.weight'], ['features.denseblock3.denselayer10.norm1.weight', 'features.denseblock3.denselayer10.norm1.bias'], ['features.denseblock3.denselayer10.conv1.weight'], ['features.denseblock3.denselayer10.norm2.weight', 'features.denseblock3.denselayer10.norm2.bias'], ['features.denseblock3.denselayer10.conv2.weight'], ['features.denseblock3.denselayer11.norm1.weight', 'features.denseblock3.denselayer11.norm1.bias'], ['features.denseblock3.denselayer11.conv1.weight'], ['features.denseblock3.denselayer11.norm2.weight', 'features.denseblock3.denselayer11.norm2.bias'], ['features.denseblock3.denselayer11.conv2.weight'], ['features.denseblock3.denselayer12.norm1.weight', 'features.denseblock3.denselayer12.norm1.bias'], ['features.denseblock3.denselayer12.conv1.weight'], ['features.denseblock3.denselayer12.norm2.weight', 'features.denseblock3.denselayer12.norm2.bias'], ['features.denseblock3.denselayer12.conv2.weight'], ['features.denseblock3.denselayer13.norm1.weight', 'features.denseblock3.denselayer13.norm1.bias'], ['features.denseblock3.denselayer13.conv1.weight'], ['features.denseblock3.denselayer13.norm2.weight', 'features.denseblock3.denselayer13.norm2.bias'], ['features.denseblock3.denselayer13.conv2.weight'], ['features.denseblock3.denselayer14.norm1.weight', 'features.denseblock3.denselayer14.norm1.bias'], ['features.denseblock3.denselayer14.conv1.weight'], ['features.denseblock3.denselayer14.norm2.weight', 'features.denseblock3.denselayer14.norm2.bias'], ['features.denseblock3.denselayer14.conv2.weight'], ['features.denseblock3.denselayer15.norm1.weight', 'features.denseblock3.denselayer15.norm1.bias'], ['features.denseblock3.denselayer15.conv1.weight'], ['features.denseblock3.denselayer15.norm2.weight', 'features.denseblock3.denselayer15.norm2.bias'], ['features.denseblock3.denselayer15.conv2.weight'], ['features.denseblock3.denselayer16.norm1.weight', 'features.denseblock3.denselayer16.norm1.bias'], ['features.denseblock3.denselayer16.conv1.weight'], ['features.denseblock3.denselayer16.norm2.weight', 'features.denseblock3.denselayer16.norm2.bias'], ['features.denseblock3.denselayer16.conv2.weight'], ['features.denseblock3.denselayer17.norm1.weight', 'features.denseblock3.denselayer17.norm1.bias'], ['features.denseblock3.denselayer17.conv1.weight'], ['features.denseblock3.denselayer17.norm2.weight', 'features.denseblock3.denselayer17.norm2.bias'], ['features.denseblock3.denselayer17.conv2.weight'], ['features.denseblock3.denselayer18.norm1.weight', 'features.denseblock3.denselayer18.norm1.bias'], ['features.denseblock3.denselayer18.conv1.weight'], ['features.denseblock3.denselayer18.norm2.weight', 'features.denseblock3.denselayer18.norm2.bias'], ['features.denseblock3.denselayer18.conv2.weight'], ['features.denseblock3.denselayer19.norm1.weight', 'features.denseblock3.denselayer19.norm1.bias'], ['features.denseblock3.denselayer19.conv1.weight'], ['features.denseblock3.denselayer19.norm2.weight', 'features.denseblock3.denselayer19.norm2.bias'], ['features.denseblock3.denselayer19.conv2.weight'], ['features.denseblock3.denselayer20.norm1.weight', 'features.denseblock3.denselayer20.norm1.bias'], ['features.denseblock3.denselayer20.conv1.weight'], ['features.denseblock3.denselayer20.norm2.weight', 'features.denseblock3.denselayer20.norm2.bias'], ['features.denseblock3.denselayer20.conv2.weight'], ['features.denseblock3.denselayer21.norm1.weight', 'features.denseblock3.denselayer21.norm1.bias'], ['features.denseblock3.denselayer21.conv1.weight'], ['features.denseblock3.denselayer21.norm2.weight', 'features.denseblock3.denselayer21.norm2.bias'], ['features.denseblock3.denselayer21.conv2.weight'], ['features.denseblock3.denselayer22.norm1.weight', 'features.denseblock3.denselayer22.norm1.bias'], ['features.denseblock3.denselayer22.conv1.weight'], ['features.denseblock3.denselayer22.norm2.weight', 'features.denseblock3.denselayer22.norm2.bias'], ['fea[1,0]<stdout>:tures.denseblock3.denselayer22.conv2.weight'], ['features.denseblock3.denselayer23.norm1.weight', 'features.denseblock3.denselayer23.norm1.bias'], ['features.denseblock3.denselayer23.conv1.weight'], ['features.denseblock3.denselayer23.norm2.weight', 'features.denseblock3.denselayer23.norm2.bias'], ['features.denseblock3.denselayer23.conv2.weight'], ['features.denseblock3.denselayer24.norm1.weight', 'features.denseblock3.denselayer24.norm1.bias'], ['features.denseblock3.denselayer24.conv1.weight'], ['features.denseblock3.denselayer24.norm2.weight', 'features.denseblock3.denselayer24.norm2.bias'], ['features.denseblock3.denselayer24.conv2.weight'], ['features.denseblock3.denselayer25.norm1.weight', 'features.denseblock3.denselayer25.norm1.bias'], ['features.denseblock3.denselayer25.conv1.weight'], ['features.denseblock3.denselayer25.norm2.weight', 'features.denseblock3.denselayer25.norm2.bias'], ['features.denseblock3.denselayer25.conv2.weight'], ['features.denseblock3.denselayer26.norm1.weight', 'features.denseblock3.denselayer26.norm1.bias'], ['features.denseblock3.denselayer26.conv1.weight'], ['features.denseblock3.denselayer26.norm2.weight', 'features.denseblock3.denselayer26.norm2.bias'], ['features.denseblock3.denselayer26.conv2.weight'], ['features.denseblock3.denselayer27.norm1.weight', 'features.denseblock3.denselayer27.norm1.bias'], ['features.denseblock3.denselayer27.conv1.weight'], ['features.denseblock3.denselayer27.norm2.weight', 'features.denseblock3.denselayer27.norm2.bias'], ['features.denseblock3.denselayer27.conv2.weight'], ['features.denseblock3.denselayer28.norm1.weight', 'features.denseblock3.denselayer28.norm1.bias'], ['features.denseblock3.denselayer28.conv1.weight'], ['features.denseblock3.denselayer28.norm2.weight', 'features.denseblock3.denselayer28.norm2.bias'], ['features.denseblock3.denselayer28.conv2.weight'], ['features.denseblock3.denselayer29.norm1.weight', 'features.denseblock3.denselayer29.norm1.bias'], ['features.denseblock3.denselayer29.conv1.weight'], ['features.denseblock3.denselayer29.norm2.weight', 'features.denseblock3.denselayer29.norm2.bias'], ['features.denseblock3.denselayer29.conv2.weight'], ['features.denseblock3.denselayer30.norm1.weight', 'features.denseblock3.denselayer30.norm1.bias'], ['features.denseblock3.denselayer30.conv1.weight'], ['features.denseblock3.denselayer30.norm2.weight', 'features.denseblock3.denselayer30.norm2.bias'], ['features.denseblock3.denselayer30.conv2.weight'], ['features.denseblock3.denselayer31.norm1.weight', 'features.denseblock3.denselayer31.norm1.bias'], ['features.denseblock3.denselayer31.conv1.weight'], ['features.denseblock3.denselayer31.norm2.weight', 'features.denseblock3.denselayer31.norm2.bias'], ['features.denseblock3.denselayer31.conv2.weight'], ['features.denseblock3.denselayer32.norm1.weight', 'features.denseblock3.denselayer32.norm1.bias'], ['features.denseblock3.denselayer32.conv1.weight'], ['features.denseblock3.denselayer32.norm2.weight', 'features.denseblock3.denselayer32.norm2.bias'], ['features.denseblock3.denselayer32.conv2.weight'], ['features.denseblock3.denselayer33.norm1.weight', 'features.denseblock3.denselayer33.norm1.bias'], ['features.denseblock3.denselayer33.conv1.weight'], ['features.denseblock3.denselayer33.norm2.weight', 'features.denseblock3.denselayer33.norm2.bias'], ['features.denseblock3.denselayer33.conv2.weight'], ['features.denseblock3.denselayer34.norm1.weight', 'features.denseblock3.denselayer34.norm1.bias'], ['features.denseblock3.denselayer34.conv1.weight'], ['features.denseblock3.denselayer34.norm2.weight', 'features.denseblock3.denselayer34.norm2.bias'], ['features.denseblock3.denselayer34.conv2.weight'], ['features.denseblock3.denselayer35.norm1.weight', 'features.denseblock3.denselayer35.norm1.bias'], ['features.denseblock3.denselayer35.conv1.weight'], ['features.denseblock3.denselayer35.norm2.weight', 'features.denseblock3.denselayer35.norm2.bias'], ['features.denseblock3.denselayer35.conv2.weight'], ['features.denseblock3.denselayer36.norm1.weight', 'features.denseblock3.denselayer36.norm1.bias[1,0]<stdout>:'], ['features.denseblock3.denselayer36.conv1.weight'], ['features.denseblock3.denselayer36.norm2.weight', 'features.denseblock3.denselayer36.norm2.bias'], ['features.denseblock3.denselayer36.conv2.weight'], ['features.denseblock3.denselayer37.norm1.weight', 'features.denseblock3.denselayer37.norm1.bias'], ['features.denseblock3.denselayer37.conv1.weight'], ['features.denseblock3.denselayer37.norm2.weight', 'features.denseblock3.denselayer37.norm2.bias'], ['features.denseblock3.denselayer37.conv2.weight'], ['features.denseblock3.denselayer38.norm1.weight', 'features.denseblock3.denselayer38.norm1.bias'], ['features.denseblock3.denselayer38.conv1.weight'], ['features.denseblock3.denselayer38.norm2.weight', 'features.denseblock3.denselayer38.norm2.bias'], ['features.denseblock3.denselayer38.conv2.weight'], ['features.denseblock3.denselayer39.norm1.weight', 'features.denseblock3.denselayer39.norm1.bias'], ['features.denseblock3.denselayer39.conv1.weight'], ['features.denseblock3.denselayer39.norm2.weight', 'features.denseblock3.denselayer39.norm2.bias'], ['features.denseblock3.denselayer39.conv2.weight'], ['features.denseblock3.denselayer40.norm1.weight', 'features.denseblock3.denselayer40.norm1.bias'], ['features.denseblock3.denselayer40.conv1.weight'], ['features.denseblock3.denselayer40.norm2.weight', 'features.denseblock3.denselayer40.norm2.bias'], ['features.denseblock3.denselayer40.conv2.weight'], ['features.denseblock3.denselayer41.norm1.weight', 'features.denseblock3.denselayer41.norm1.bias'], ['features.denseblock3.denselayer41.conv1.weight'], ['features.denseblock3.denselayer41.norm2.weight', 'features.denseblock3.denselayer41.norm2.bias'], ['features.denseblock3.denselayer41.conv2.weight'], ['features.denseblock3.denselayer42.norm1.weight', 'features.denseblock3.denselayer42.norm1.bias'], ['features.denseblock3.denselayer42.conv1.weight'], ['features.denseblock3.denselayer42.norm2.weight', 'features.denseblock3.denselayer42.norm2.bias'], ['features.denseblock3.denselayer42.conv2.weight'], ['features.denseblock3.denselayer43.norm1.weight', 'features.denseblock3.denselayer43.norm1.bias'], ['features.denseblock3.denselayer43.conv1.weight'], ['features.denseblock3.denselayer43.norm2.weight', 'features.denseblock3.denselayer43.norm2.bias'], ['features.denseblock3.denselayer43.conv2.weight'], ['features.denseblock3.denselayer44.norm1.weight', 'features.denseblock3.denselayer44.norm1.bias'], ['features.denseblock3.denselayer44.conv1.weight'], ['features.denseblock3.denselayer44.norm2.weight', 'features.denseblock3.denselayer44.norm2.bias'], ['features.denseblock3.denselayer44.conv2.weight'], ['features.denseblock3.denselayer45.norm1.weight', 'features.denseblock3.denselayer45.norm1.bias'], ['features.denseblock3.denselayer45.conv1.weight'], ['features.denseblock3.denselayer45.norm2.weight', 'features.denseblock3.denselayer45.norm2.bias'], ['features.denseblock3.denselayer45.conv2.weight'], ['features.denseblock3.denselayer46.norm1.weight', 'features.denseblock3.denselayer46.norm1.bias'], ['features.denseblock3.denselayer46.conv1.weight'], ['features.denseblock3.denselayer46.norm2.weight', 'features.denseblock3.denselayer46.norm2.bias'], ['features.denseblock3.denselayer46.conv2.weight'], ['features.denseblock3.denselayer47.norm1.weight', 'features.denseblock3.denselayer47.norm1.bias'], ['features.denseblock3.denselayer47.conv1.weight'], ['features.denseblock3.denselayer47.norm2.weight', 'features.denseblock3.denselayer47.norm2.bias'], ['features.denseblock3.denselayer47.conv2.weight'], ['features.denseblock3.denselayer48.norm1.weight', 'features.denseblock3.denselayer48.norm1.bias'], ['features.denseblock3.denselayer48.conv1.weight'], ['features.denseblock3.denselayer48.norm2.weight', 'features.denseblock3.denselayer48.norm2.bias'], ['features.denseblock3.denselayer48.conv2.weight'], ['features.transition3.norm.weight', 'features.transition3.norm.bias'], ['features.transition3.conv.weight'], ['features.denseblock4.denselayer1.norm1.weight', 'features.denseblock4.denselayer1.norm1.bias'], ['features.denseblock4.denselay[1,0]<stdout>:er1.conv1.weight'], ['features.denseblock4.denselayer1.norm2.weight', 'features.denseblock4.denselayer1.norm2.bias'], ['features.denseblock4.denselayer1.conv2.weight'], ['features.denseblock4.denselayer2.norm1.weight', 'features.denseblock4.denselayer2.norm1.bias'], ['features.denseblock4.denselayer2.conv1.weight'], ['features.denseblock4.denselayer2.norm2.weight', 'features.denseblock4.denselayer2.norm2.bias'], ['features.denseblock4.denselayer2.conv2.weight'], ['features.denseblock4.denselayer3.norm1.weight', 'features.denseblock4.denselayer3.norm1.bias'], ['features.denseblock4.denselayer3.conv1.weight'], ['features.denseblock4.denselayer3.norm2.weight', 'features.denseblock4.denselayer3.norm2.bias'], ['features.denseblock4.denselayer3.conv2.weight'], ['features.denseblock4.denselayer4.norm1.weight', 'features.denseblock4.denselayer4.norm1.bias'], ['features.denseblock4.denselayer4.conv1.weight'], ['features.denseblock4.denselayer4.norm2.weight', 'features.denseblock4.denselayer4.norm2.bias'], ['features.denseblock4.denselayer4.conv2.weight'], ['features.denseblock4.denselayer5.norm1.weight', 'features.denseblock4.denselayer5.norm1.bias'], ['features.denseblock4.denselayer5.conv1.weight'], ['features.denseblock4.denselayer5.norm2.weight', 'features.denseblock4.denselayer5.norm2.bias'], ['features.denseblock4.denselayer5.conv2.weight'], ['features.denseblock4.denselayer6.norm1.weight', 'features.denseblock4.denselayer6.norm1.bias'], ['features.denseblock4.denselayer6.conv1.weight'], ['features.denseblock4.denselayer6.norm2.weight', 'features.denseblock4.denselayer6.norm2.bias'], ['features.denseblock4.denselayer6.conv2.weight'], ['features.denseblock4.denselayer7.norm1.weight', 'features.denseblock4.denselayer7.norm1.bias'], ['features.denseblock4.denselayer7.conv1.weight'], ['features.denseblock4.denselayer7.norm2.weight', 'features.denseblock4.denselayer7.norm2.bias'], ['features.denseblock4.denselayer7.conv2.weight'], ['features.denseblock4.denselayer8.norm1.weight', 'features.denseblock4.denselayer8.norm1.bias'], ['features.denseblock4.denselayer8.conv1.weight'], ['features.denseblock4.denselayer8.norm2.weight', 'features.denseblock4.denselayer8.norm2.bias'], ['features.denseblock4.denselayer8.conv2.weight'], ['features.denseblock4.denselayer9.norm1.weight', 'features.denseblock4.denselayer9.norm1.bias'], ['features.denseblock4.denselayer9.conv1.weight'], ['features.denseblock4.denselayer9.norm2.weight', 'features.denseblock4.denselayer9.norm2.bias'], ['features.denseblock4.denselayer9.conv2.weight'], ['features.denseblock4.denselayer10.norm1.weight', 'features.denseblock4.denselayer10.norm1.bias'], ['features.denseblock4.denselayer10.conv1.weight'], ['features.denseblock4.denselayer10.norm2.weight', 'features.denseblock4.denselayer10.norm2.bias'], ['features.denseblock4.denselayer10.conv2.weight'], ['features.denseblock4.denselayer11.norm1.weight', 'features.denseblock4.denselayer11.norm1.bias'], ['features.denseblock4.denselayer11.conv1.weight'], ['features.denseblock4.denselayer11.norm2.weight', 'features.denseblock4.denselayer11.norm2.bias'], ['features.denseblock4.denselayer11.conv2.weight'], ['features.denseblock4.denselayer12.norm1.weight', 'features.denseblock4.denselayer12.norm1.bias'], ['features.denseblock4.denselayer12.conv1.weight'], ['features.denseblock4.denselayer12.norm2.weight', 'features.denseblock4.denselayer12.norm2.bias'], ['features.denseblock4.denselayer12.conv2.weight'], ['features.denseblock4.denselayer13.norm1.weight', 'features.denseblock4.denselayer13.norm1.bias'], ['features.denseblock4.denselayer13.conv1.weight'], ['features.denseblock4.denselayer13.norm2.weight', 'features.denseblock4.denselayer13.norm2.bias'], ['features.denseblock4.denselayer13.conv2.weight'], ['features.denseblock4.denselayer14.norm1.weight', 'features.denseblock4.denselayer14.norm1.bias'], ['features.denseblock4.denselayer14.conv1.weight'], ['features.denseblock4.denselayer14.norm2.weight', 'features.denseblock4.denselayer14.norm2.bias'], ['features.denseblock4.denselayer14.conv2.weight'], ['features.denseblock4[1,0]<stdout>:.denselayer15.norm1.weight', 'features.denseblock4.denselayer15.norm1.bias'], ['features.denseblock4.denselayer15.conv1.weight'], ['features.denseblock4.denselayer15.norm2.weight', 'features.denseblock4.denselayer15.norm2.bias'], ['features.denseblock4.denselayer15.conv2.weight'], ['features.denseblock4.denselayer16.norm1.weight', 'features.denseblock4.denselayer16.norm1.bias'], ['features.denseblock4.denselayer16.conv1.weight'], ['features.denseblock4.denselayer16.norm2.weight', 'features.denseblock4.denselayer16.norm2.bias'], ['features.denseblock4.denselayer16.conv2.weight'], ['features.denseblock4.denselayer17.norm1.weight', 'features.denseblock4.denselayer17.norm1.bias'], ['features.denseblock4.denselayer17.conv1.weight'], ['features.denseblock4.denselayer17.norm2.weight', 'features.denseblock4.denselayer17.norm2.bias'], ['features.denseblock4.denselayer17.conv2.weight'], ['features.denseblock4.denselayer18.norm1.weight', 'features.denseblock4.denselayer18.norm1.bias'], ['features.denseblock4.denselayer18.conv1.weight'], ['features.denseblock4.denselayer18.norm2.weight', 'features.denseblock4.denselayer18.norm2.bias'], ['features.denseblock4.denselayer18.conv2.weight'], ['features.denseblock4.denselayer19.norm1.weight', 'features.denseblock4.denselayer19.norm1.bias'], ['features.denseblock4.denselayer19.conv1.weight'], ['features.denseblock4.denselayer19.norm2.weight', 'features.denseblock4.denselayer19.norm2.bias'], ['features.denseblock4.denselayer19.conv2.weight'], ['features.denseblock4.denselayer20.norm1.weight', 'features.denseblock4.denselayer20.norm1.bias'], ['features.denseblock4.denselayer20.conv1.weight'], ['features.denseblock4.denselayer20.norm2.weight', 'features.denseblock4.denselayer20.norm2.bias'], ['features.denseblock4.denselayer20.conv2.weight'], ['features.denseblock4.denselayer21.norm1.weight', 'features.denseblock4.denselayer21.norm1.bias'], ['features.denseblock4.denselayer21.conv1.weight'], ['features.denseblock4.denselayer21.norm2.weight', 'features.denseblock4.denselayer21.norm2.bias'], ['features.denseblock4.denselayer21.conv2.weight'], ['features.denseblock4.denselayer22.norm1.weight', 'features.denseblock4.denselayer22.norm1.bias'], ['features.denseblock4.denselayer22.conv1.weight'], ['features.denseblock4.denselayer22.norm2.weight', 'features.denseblock4.denselayer22.norm2.bias'], ['features.denseblock4.denselayer22.conv2.weight'], ['features.denseblock4.denselayer23.norm1.weight', 'features.denseblock4.denselayer23.norm1.bias'], ['features.denseblock4.denselayer23.conv1.weight'], ['features.denseblock4.denselayer23.norm2.weight', 'features.denseblock4.denselayer23.norm2.bias'], ['features.denseblock4.denselayer23.conv2.weight'], ['features.denseblock4.denselayer24.norm1.weight', 'features.denseblock4.denselayer24.norm1.bias'], ['features.denseblock4.denselayer24.conv1.weight'], ['features.denseblock4.denselayer24.norm2.weight', 'features.denseblock4.denselayer24.norm2.bias'], ['features.denseblock4.denselayer24.conv2.weight'], ['features.denseblock4.denselayer25.norm1.weight', 'features.denseblock4.denselayer25.norm1.bias'], ['features.denseblock4.denselayer25.conv1.weight'], ['features.denseblock4.denselayer25.norm2.weight', 'features.denseblock4.denselayer25.norm2.bias'], ['features.denseblock4.denselayer25.conv2.weight'], ['features.denseblock4.denselayer26.norm1.weight', 'features.denseblock4.denselayer26.norm1.bias'], ['features.denseblock4.denselayer26.conv1.weight'], ['features.denseblock4.denselayer26.norm2.weight', 'features.denseblock4.denselayer26.norm2.bias'], ['features.denseblock4.denselayer26.conv2.weight'], ['features.denseblock4.denselayer27.norm1.weight', 'features.denseblock4.denselayer27.norm1.bias'], ['features.denseblock4.denselayer27.conv1.weight'], ['features.denseblock4.denselayer27.norm2.weight', 'features.denseblock4.denselayer27.norm2.bias'], ['features.denseblock4.denselayer27.conv2.weight'], ['features.denseblock4.denselayer28.norm1.weight', 'features.denseblock4.denselayer28.norm1.bias'], ['features.denseblock4.denselayer28.conv1.weight'], ['features.de[1,0]<stdout>:nseblock4.denselayer28.norm2.weight', 'features.denseblock4.denselayer28.norm2.bias'], ['features.denseblock4.denselayer28.conv2.weight'], ['features.denseblock4.denselayer29.norm1.weight', 'features.denseblock4.denselayer29.norm1.bias'], ['features.denseblock4.denselayer29.conv1.weight'], ['features.denseblock4.denselayer29.norm2.weight', 'features.denseblock4.denselayer29.norm2.bias'], ['features.denseblock4.denselayer29.conv2.weight'], ['features.denseblock4.denselayer30.norm1.weight', 'features.denseblock4.denselayer30.norm1.bias'], ['features.denseblock4.denselayer30.conv1.weight'], ['features.denseblock4.denselayer30.norm2.weight', 'features.denseblock4.denselayer30.norm2.bias'], ['features.denseblock4.denselayer30.conv2.weight'], ['features.denseblock4.denselayer31.norm1.weight', 'features.denseblock4.denselayer31.norm1.bias'], ['features.denseblock4.denselayer31.conv1.weight'], ['features.denseblock4.denselayer31.norm2.weight', 'features.denseblock4.denselayer31.norm2.bias'], ['features.denseblock4.denselayer31.conv2.weight'], ['features.denseblock4.denselayer32.norm1.weight', 'features.denseblock4.denselayer32.norm1.bias'], ['features.denseblock4.denselayer32.conv1.weight'], ['features.denseblock4.denselayer32.norm2.weight', 'features.denseblock4.denselayer32.norm2.bias'], ['features.denseblock4.denselayer32.conv2.weight'], ['features.norm5.weight', 'features.norm5.bias'], ['classifier.weight', 'classifier.bias']]
    elif dnn == 'bert_base':
        M = [23445504, 393216, 1536, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 589824, 768, 589824, 768, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 589824, 768, 30528, 589824, 768, 768, 768, 1536, 2]
        t_b = [0.08150195850771369, 0.0013669091573620747, 5.339488895945604e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.008201454944172447, 1.0678977791891208e-05, 0.008201454944172447, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 0.002050363736043112, 2.669744447972802e-06, 0.00010612234180691887, 0.002050363736043112, 2.669744447972802e-06, 2.669744447972802e-06, 2.669744447972802e-06, 5.339488895945604e-06, 6.952459499929172e-09]
        t_f = [4.26201880843332e-05, 7.14803993028649e-07, 2.79220309776816e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 4.288823958171894e-06, 5.58440619553632e-09, 4.288823958171894e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 1.0722059895429734e-06, 1.39610154888408e-09, 5.549503656814218e-08, 1.0722059895429734e-06, 1.39610154888408e-09, 1.39610154888408e-09, 1.39610154888408e-09, 2.79220309776816e-09, 3.6356811168856255e-12]

        names = ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.e[1,0]<stdout>:ncoder.layer.4.output.dense.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encode[1,0]<stdout>:r.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'cls.predictions.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.seq_relationship.weight', 'cls.seq_relationship.bias']
        parameter_groups = [['bert.embeddings.word_embeddings.weight'], ['bert.embeddings.position_embeddings.weight'], ['bert.embeddings.token_type_embeddings.weight'], ['bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias'], ['bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias'], ['bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias'], ['bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias'], ['bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias'], ['bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias'], ['bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias'], ['bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias'], ['bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias'], ['bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias'], ['bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias'], ['bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias'], ['bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias'], ['bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias'], ['bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias'], ['bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias'], ['bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias'], ['bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias'], ['bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias'], ['bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias'], ['bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias'], ['bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias'], ['bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias'], ['bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias'], ['bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias'], ['bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias'], ['bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias'], ['bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias'], ['bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias'], ['bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias'], ['bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias'], ['bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias'], ['bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias'], ['bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias'], ['bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias'], ['bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias'], ['bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias'], ['bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias'], ['bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.l[1,0]<stdout>:ayer.4.intermediate.dense.bias'], ['bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias'], ['bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias'], ['bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias'], ['bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias'], ['bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias'], ['bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias'], ['bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias'], ['bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias'], ['bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias'], ['bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias'], ['bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias'], ['bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias'], ['bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias'], ['bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias'], ['bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias'], ['bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias'], ['bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias'], ['bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias'], ['bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias'], ['bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias'], ['bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias'], ['bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias'], ['bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias'], ['bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias'], ['bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias'], ['bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias'], ['bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias'], ['bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias'], ['bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias'], ['bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias'], ['bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias'], ['bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias'], ['bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias'], ['bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias'], ['bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias'], ['bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias'], ['bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias'], ['bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias'], ['bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias'], ['bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermed[1,0]<stdout>:iate.dense.bias'], ['bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias'], ['bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias'], ['bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias'], ['bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias'], ['bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias'], ['bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias'], ['bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias'], ['bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias'], ['bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias'], ['bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias'], ['bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias'], ['bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias'], ['bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias'], ['bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias'], ['bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias'], ['bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias'], ['bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias'], ['bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias'], ['bert.pooler.dense.weight', 'bert.pooler.dense.bias'], ['cls.predictions.bias'], ['cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias'], ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias'], ['cls.seq_relationship.weight', 'cls.seq_relationship.bias']]
    elif dnn == 'gpt2':
        M = [38597376, 786432, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768, 1769472, 2304, 589824, 768, 768, 768, 2359296, 3072, 2359296, 768, 768, 768]
        t_b = [0.1078745792984036, 0.0021979737987059575, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.004945441047088404, 6.43937636339636e-06, 0.0016484803490294682, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06, 0.006593921396117873, 8.585835151195146e-06, 0.006593921396117873, 2.1464587877987866e-06, 2.1464587877987866e-06, 2.1464587877987866e-06]
        t_f = [0.00593545384314078, 0.00012093648119418507, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0002721070826869164, 3.5430609724858906e-07, 9.07023608956388e-05, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07, 0.0003628094435825552, 4.724081296647854e-07, 0.0003628094435825552, 1.1810203241619635e-07, 1.1810203241619635e-07, 1.1810203241619635e-07]

        names = ['transformer.wte.weight', 'transformer.wpe.weight', 'transformer.h.0.ln_1.weight', 'transformer.h.0.ln_1.bias', 'transformer.h.0.attn.c_attn.weight', 'transformer.h.0.attn.c_attn.bias', 'transformer.h.0.attn.c_proj.weight', 'transformer.h.0.attn.c_proj.bias', 'transformer.h.0.ln_2.weight', 'transformer.h.0.ln_2.bias', 'transformer.h.0.mlp.c_fc.weight', 'transformer.h.0.mlp.c_fc.bias', 'transformer.h.0.mlp.c_proj.weight', 'transformer.h.0.mlp.c_proj.bias', 'transformer.h.1.ln_1.weight', 'transformer.h.1.ln_1.bias', 'transformer.h.1.attn.c_attn.weight', 'transformer.h.1.attn.c_attn.bias', 'transformer.h.1.attn.c_proj.weight', 'transformer.h.1.attn.c_proj.bias', 'transformer.h.1.ln_2.weight', 'transformer.h.1.ln_2.bias', 'transformer.h.1.mlp.c_fc.weight', 'transformer.h.1.mlp.c_fc.bias', 'transformer.h.1.mlp.c_proj.weight', 'transformer.h.1.mlp.c_proj.bias', 'transformer.h.2.ln_1.weight', 'transformer.h.2.ln_1.bias', 'transformer.h.2.attn.c_attn.weight', 'transformer.h.2.attn.c_attn.bias', 'transformer.h.2.attn.c_proj.weight', 'transformer.h.2.attn.c_proj.bias', 'transformer.h.2.ln_2.weight', 'transformer.h.2.ln_2.bias', 'transformer.h.2.mlp.c_fc.weight', 'transformer.h.2.mlp.c_fc.bias', 'transformer.h.2.mlp.c_proj.weight', 'transformer.h.2.mlp.c_proj.bias', 'transformer.h.3.ln_1.weight', 'transformer.h.3.ln_1.bias', 'transformer.h.3.attn.c_attn.weight', 'transformer.h.3.attn.c_attn.bias', 'transformer.h.3.attn.c_proj.weight', 'transformer.h.3.attn.c_proj.bias', 'transformer.h.3.ln_2.weight', 'transformer.h.3.ln_2.bias', 'transformer.h.3.mlp.c_fc.weight', 'transformer.h.3.mlp.c_fc.bias', 'transformer.h.3.mlp.c_proj.weight', 'transformer.h.3.mlp.c_proj.bias', 'transformer.h.4.ln_1.weight', 'transformer.h.4.ln_1.bias', 'transformer.h.4.attn.c_attn.weight', 'transformer.h.4.attn.c_attn.bias', 'transformer.h.4.attn.c_proj.weight', 'transformer.h.4.attn.c_proj.bias', 'transformer.h.4.ln_2.weight', 'transformer.h.4.ln_2.bias', 'transformer.h.4.mlp.c_fc.weight', 'transformer.h.4.mlp.c_fc.bias', 'transformer.h.4.mlp.c_proj.weight', 'transformer.h.4.mlp.c_proj.bias', 'transformer.h.5.ln_1.weight', 'transformer.h.5.ln_1.bias', 'transformer.h.5.attn.c_attn.weight', 'transformer.h.5.attn.c_attn.bias', 'transformer.h.5.attn.c_proj.weight', 'transformer.h.5.attn.c_proj.bias', 'transformer.h.5.ln_2.weight', 'transformer.h.5.ln_2.bias', 'transformer.h.5.mlp.c_fc.weight', 'transformer.h.5.mlp.c_fc.bias', 'transformer.h.5.mlp.c_proj.weight', 'transformer.h.5.mlp.c_proj.bias', 'transformer.h.6.ln_1.weight', 'transformer.h.6.ln_1.bias', 'transformer.h.6.attn.c_attn.weight', 'transformer.h.6.attn.c_attn.bias', 'transformer.h.6.attn.c_proj.weight', 'transformer.h.6.attn.c_proj.bias', 'transformer.h.6.ln_2.weight', 'transformer.h.6.ln_2.bias', 'transformer.h.6.mlp.c_fc.weight', 'transformer.h.6.mlp.c_fc.bias', 'transformer.h.6.mlp.c_proj.weight', 'transformer.h.6.mlp.c_proj.bias', 'transformer.h.7.ln_1.weight', 'transformer.h.7.ln_1.bias', 'transformer.h.7.attn.c_attn.weight', 'transformer.h.7.attn.c_attn.bias', 'transformer.h.7.attn.c_proj.weight', 'transformer.h.7.attn.c_proj.bias', 'transformer.h.7.ln_2.weight', 'transformer.h.7.ln_2.bias', 'transformer.h.7.mlp.c_fc.weight', 'transformer.h.7.mlp.c_fc.bias', 'transformer.h.7.mlp.c_proj.weight', 'transformer.h.7.mlp.c_proj.bias', 'transformer.h.8.ln_1.weight', 'transformer.h.8.ln_1.bias', 'transformer.h.8.attn.c_attn.weight', 'transformer.h.8.attn.c_attn.bias', 'transformer.h.8.attn.c_proj.weight', 'transformer.h.8.attn.c_proj.bias', 'transformer.h.8.ln_2.weight', 'transformer.h.8.ln_2.bias', 'transformer.h.8.mlp.c_fc.weight', 'transformer.h.8.mlp.c_fc.bias', 'transformer.h.8.mlp.c_proj.weight', 'transformer.h.8.mlp.c_proj.bias', 'transformer.h.9.ln_1.weight', 'transformer.h.9.ln_1.bias', 'transformer.h.9.attn.c_attn.weight', 'transformer.h.9.attn.c_attn.bias', 'transformer.h.9.attn.c_proj.weight', 'transformer.h.9.attn.c_proj.bias', 'transformer.h.9.ln_2.weight', 'transformer.h.9.ln_2.bias', 'transformer.h.9.mlp.c_fc.weight', 'transformer.h.9.mlp.c_fc.bias', 'transformer.h.9.mlp.c_proj[1,1]<stdout>:.weight', 'transformer.h.9.mlp.c_proj.bias', 'transformer.h.10.ln_1.weight', 'transformer.h.10.ln_1.bias', 'transformer.h.10.attn.c_attn.weight', 'transformer.h.10.attn.c_attn.bias', 'transformer.h.10.attn.c_proj.weight', 'transformer.h.10.attn.c_proj.bias', 'transformer.h.10.ln_2.weight', 'transformer.h.10.ln_2.bias', 'transformer.h.10.mlp.c_fc.weight', 'transformer.h.10.mlp.c_fc.bias', 'transformer.h.10.mlp.c_proj.weight', 'transformer.h.10.mlp.c_proj.bias', 'transformer.h.11.ln_1.weight', 'transformer.h.11.ln_1.bias', 'transformer.h.11.attn.c_attn.weight', 'transformer.h.11.attn.c_attn.bias', 'transformer.h.11.attn.c_proj.weight', 'transformer.h.11.attn.c_proj.bias', 'transformer.h.11.ln_2.weight', 'transformer.h.11.ln_2.bias', 'transformer.h.11.mlp.c_fc.weight', 'transformer.h.11.mlp.c_fc.bias', 'transformer.h.11.mlp.c_proj.weight', 'transformer.h.11.mlp.c_proj.bias', 'transformer.ln_f.weight', 'transformer.ln_f.bias']
        parameter_groups = [['transformer.wte.weight'], ['transformer.wpe.weight'], ['transformer.h.0.ln_1.weight', 'transformer.h.0.ln_1.bias'], ['transformer.h.0.attn.c_attn.weight', 'transformer.h.0.attn.c_attn.bias'], ['transformer.h.0.attn.c_proj.weight', 'transformer.h.0.attn.c_proj.bias'], ['transformer.h.0.ln_2.weight', 'transformer.h.0.ln_2.bias'], ['transformer.h.0.mlp.c_fc.weight', 'transformer.h.0.mlp.c_fc.bias'], ['transformer.h.0.mlp.c_proj.weight', 'transformer.h.0.mlp.c_proj.bias'], ['transformer.h.1.ln_1.weight', 'transformer.h.1.ln_1.bias'], ['transformer.h.1.attn.c_attn.weight', 'transformer.h.1.attn.c_attn.bias'], ['transformer.h.1.attn.c_proj.weight', 'transformer.h.1.attn.c_proj.bias'], ['transformer.h.1.ln_2.weight', 'transformer.h.1.ln_2.bias'], ['transformer.h.1.mlp.c_fc.weight', 'transformer.h.1.mlp.c_fc.bias'], ['transformer.h.1.mlp.c_proj.weight', 'transformer.h.1.mlp.c_proj.bias'], ['transformer.h.2.ln_1.weight', 'transformer.h.2.ln_1.bias'], ['transformer.h.2.attn.c_attn.weight', 'transformer.h.2.attn.c_attn.bias'], ['transformer.h.2.attn.c_proj.weight', 'transformer.h.2.attn.c_proj.bias'], ['transformer.h.2.ln_2.weight', 'transformer.h.2.ln_2.bias'], ['transformer.h.2.mlp.c_fc.weight', 'transformer.h.2.mlp.c_fc.bias'], ['transformer.h.2.mlp.c_proj.weight', 'transformer.h.2.mlp.c_proj.bias'], ['transformer.h.3.ln_1.weight', 'transformer.h.3.ln_1.bias'], ['transformer.h.3.attn.c_attn.weight', 'transformer.h.3.attn.c_attn.bias'], ['transformer.h.3.attn.c_proj.weight', 'transformer.h.3.attn.c_proj.bias'], ['transformer.h.3.ln_2.weight', 'transformer.h.3.ln_2.bias'], ['transformer.h.3.mlp.c_fc.weight', 'transformer.h.3.mlp.c_fc.bias'], ['transformer.h.3.mlp.c_proj.weight', 'transformer.h.3.mlp.c_proj.bias'], ['transformer.h.4.ln_1.weight', 'transformer.h.4.ln_1.bias'], ['transformer.h.4.attn.c_attn.weight', 'transformer.h.4.attn.c_attn.bias'], ['transformer.h.4.attn.c_proj.weight', 'transformer.h.4.attn.c_proj.bias'], ['transformer.h.4.ln_2.weight', 'transformer.h.4.ln_2.bias'], ['transformer.h.4.mlp.c_fc.weight', 'transformer.h.4.mlp.c_fc.bias'], ['transformer.h.4.mlp.c_proj.weight', 'transformer.h.4.mlp.c_proj.bias'], ['transformer.h.5.ln_1.weight', 'transformer.h.5.ln_1.bias'], ['transformer.h.5.attn.c_attn.weight', 'transformer.h.5.attn.c_attn.bias'], ['transformer.h.5.attn.c_proj.weight', 'transformer.h.5.attn.c_proj.bias'], ['transformer.h.5.ln_2.weight', 'transformer.h.5.ln_2.bias'], ['transformer.h.5.mlp.c_fc.weight', 'transformer.h.5.mlp.c_fc.bias'], ['transformer.h.5.mlp.c_proj.weight', 'transformer.h.5.mlp.c_proj.bias'], ['transformer.h.6.ln_1.weight', 'transformer.h.6.ln_1.bias'], ['transformer.h.6.attn.c_attn.weight', 'transformer.h.6.attn.c_attn.bias'], ['transformer.h.6.attn.c_proj.weight', 'transformer.h.6.attn.c_proj.bias'], ['transformer.h.6.ln_2.weight', 'transformer.h.6.ln_2.bias'], ['transformer.h.6.mlp.c_fc.weight', 'transformer.h.6.mlp.c_fc.bias'], ['transformer.h.6.mlp.c_proj.weight', 'transformer.h.6.mlp.c_proj.bias'], ['transformer.h.7.ln_1.weight', 'transformer.h.7.ln_1.bias'], ['transformer.h.7.attn.c_attn.weight', 'transformer.h.7.attn.c_attn.bias'], ['transformer.h.7.attn.c_proj.weight', 'transformer.h.7.attn.c_proj.bias'], ['transformer.h.7.ln_2.weight', 'transformer.h.7.ln_2.bias'], ['transformer.h.7.mlp.c_fc.weight', 'transformer.h.7.mlp.c_fc.bias'], ['transformer.h.7.mlp.c_proj.weight', 'transformer.h.7.mlp.c_proj.bias'], ['transformer.h.8.ln_1.weight', 'transformer.h.8.ln_1.bias'], ['transformer.h.8.attn.c_attn.weight', 'transformer.h.8.attn.c_attn.bias'], ['transformer.h.8.attn.c_proj.weight', 'transformer.h.8.attn.c_proj.bias'], ['transformer.h.8.ln_2.weight', 'transformer.h.8.ln_2.bias'], ['transformer.h.8.mlp.c_fc.weight', 'transformer.h.8.mlp.c_fc.bias'], ['transformer.h.8.mlp.c_proj.weight', 'transformer.h.8.mlp.c_proj.bias'], ['transformer.h.9.ln_1.weight', 'transformer.h.9.ln_1.bias'], ['transformer.h.9.attn.c_attn.weight', 'transformer.h.9.attn.c_attn.bias'], ['transformer.h.9.attn.c_proj.weight', 'transformer.h.9.attn.c_proj.bias'], ['transformer.h.9.ln_2.weight', 'transformer.h.9.ln_2.bias'], ['transformer.h.9.mlp.c_fc.weight', 'transformer.h.9.mlp.c_fc.bias'], ['transformer.h.9.mlp.c_proj.weight', 'transformer.h.9.mlp.c_proj.bias'], ['transformer.h.10.ln_1.weight', 'transformer.h.10.ln_1.bias'], ['transformer.h.10.attn.c_attn.weight', 'transformer.h.10.attn.c_attn.bias'], ['transformer.h.10.attn.c_proj.weight', 'transformer.h.10.attn.c_proj.bias'], ['transformer.h.10.ln_2.weight', 'transformer.h.10.ln_2.bias'], ['transformer.h.10.mlp.c_fc.weight', 'transformer.h.10.mlp.c_fc.bias'], ['transformer.h.10.mlp.c_proj.weight', 'transformer.h.10.mlp.c_proj.bias'], ['transformer.h.11.ln_1.weight', 'transformer.h.11.ln_1.bias'], ['transformer.h.11.attn.c_attn.weight', 'transformer.h.11.attn.c_attn.bias'], ['transformer.h.11.attn.c_proj.weight', 'transformer.h.11.attn.c_proj.bias'], ['transformer.h.11.ln_2.weight', 'transformer.h.11.ln_2.bias'], ['transformer.h.11.mlp.c_fc.weight', 'transformer.h.11.mlp.c_fc.bias'], ['transformer.h.11.mlp.c_proj.weight', 'transformer.h.11.mlp.c_proj.bias'], ['transformer.ln_f.weight', 'transformer.ln_f.bias']]

    L = len(parameter_groups)
    new_M = np.zeros(L)
    new_t_b = np.zeros(L)
    new_t_f = np.zeros(L)
    # print(len(parameter_groups))
    for i in range(len(parameter_groups)):
        for j in parameter_groups[i]:
            for k in range(len(names)):
                if names[k] == j:
                    new_t_b[i] = new_t_b[i] + t_b[k]
                    new_t_f[i] = new_t_f[i] + t_f[k]
                    new_M[i] = new_M[i] + M[k]
    M = new_M
    t_b = new_t_b
    t_f = new_t_f

    return L, M, t_b, t_f

def Get_a_and_b(nworkers):
    if nworkers == 8:
        a = 1318.6 * 1e-06  # s
        b = 2.406 * 1e-10
    elif nworkers == 4:
        a = 948.98 * 1e-06  # s
        b = 1.541e-10
    elif nworkers == 2:
        a = 556.6 * 1e-06  # s
        b = 0.352e-10
    return a, b

def Init_List(L):
    List = SingleLink()
    for node in range(L, 0, -1):
        List.add_node(str(node) + '_rs')
    for node in range(1, L + 1, 1):
        List.add_node(str(node) + '_ag')
    return List

def Init_communication_time(a, b, L, M):
    t_rs = []
    t_ag = []
    T_ar = []
    for l in range(L):
        T_ar.append(a+b*M[l])
        t_rs.append(T_ar[l]/2)
        t_ag.append(T_ar[l]/2)
    return t_rs, t_ag, T_ar

def Init_backpropagation_timestamp(t_b, L):
    tau_b = []
    for l in range(L):
        tau_b.append(0)
    tau_b[L-1] = 0
    for l in range(L-2, -1, -1):
        tau_b[l] = tau_b[l+1] + t_b[l+1]
    return tau_b

def Calculate_communication_timestamp(t_rs, tau_b, t_b, L):
    tau_c = []
    for l in range(L):
        tau_c.append(0)
    tau_c[L-1] = tau_b[L-1] + t_b[L-1]
    for l in range(L-2, -1, -1):
        tau_c[l] = max(tau_b[l] + t_b[l], tau_c[l+1] + t_rs[l+1])
    return tau_c

def Calculate_feedfoword_timestamp(tau_c, t_rs, t_ag, t_f, L):
    tau_f = []
    tau_f.append(tau_c[0]+t_rs[0]+t_ag[0])
    sum_t_ag = t_ag[0]
    for l in range(1, L, 1):
        sum_t_ag = sum_t_ag + t_ag[l]
        tau_f.append(max(tau_f[l-1]+t_f[l-1], tau_c[0]+t_rs[0]+sum_t_ag))
    return tau_f

def Init_optimizable_space(L, tau_b, t_b, tau_c, t_rs, t_ag, t_f, tau_f):
    S_bc = np.zeros((L, 2))
    S_fc = np.zeros((L, 2))

    S_bc[1][1] = max(tau_b[0]+t_b[0]-(tau_c[2]+t_rs[2]), 0)

    S_fc[1][1] = tau_c[0] + t_rs[0] + t_ag[0] - tau_f[0] + (t_ag[1]-t_f[1])
    flag = S_fc[1][1]
    for k in range(2, L, 1):
        flag = flag + (t_ag[k]-t_f[k])
        if flag > S_fc[1][1]:
            S_fc[1][1] = flag
    S_fc[1][1] = max(S_fc[1][1], 0)
    return S_bc, S_fc

def PipeDAP(dnn):
    L, M, t_b, t_f = Init_layer_wise_time(dnn)

    a, b = Get_a_and_b(8)

    List = Init_List(L)
    t_rs, t_ag, T_ar = Init_communication_time(a, b, L, M)
    tau_b = Init_backpropagation_timestamp(t_b, L)
    tau_c = Calculate_communication_timestamp(t_rs, tau_b, t_b, L)
    tau_f = Calculate_feedfoword_timestamp(tau_c, t_rs, t_ag, t_f, L)
    # print('tau_b:', tau_b)
    # print('tau_f:', tau_f)
    # print('DeAR:', tau_f[L-1]+t_f[L-1])
    S_bc, S_fc = Init_optimizable_space(L, tau_b, t_b, tau_c, t_rs, t_ag, t_f, tau_f)

    S = np.zeros((L, 2))

    S[1][1] = S_bc[1][1] + S_fc[1][1]
    for n in range(1, L, 1):
        S[n][0] = S[n][1] - [tau_c[n - 1] - (tau_c[n] + t_rs[n])]
        if tau_c[n - 1] - (tau_c[n] + t_rs[n]) > a:
            if S[n][1] + a > T_ar[n] / 2:
                List.reorder_node(n, n)
                t_ag[n] = 0
                t_rs[n] = T_ar[n] / 2 + T_ar[n] / 2 - a
                tau_c = Calculate_communication_timestamp(t_rs, tau_b, t_b, L)
                tau_f = Calculate_feedfoword_timestamp(tau_c, t_rs, t_ag, t_f, L)
                S_bc[n][1] = max(S_bc[n][1] - T_ar[n] / 2, 0)
                S_fc[n][1] = max(S_fc[n][1] - T_ar[n] / 2, 0)
        else:
            _S = S[n][0] + 2 * a
            Delta_a = 2 * a
            if n - 1 == 0:
                _S = S[n][0] + a
                Delta_a = a
            if _S > T_ar[n] / 2:
                List.reorder_node(n - 1, n)
                t_ag[n] = 0
                t_rs[n - 1] = T_ar[n - 1] / 2 + T_ar[n - 1] / 2 - Delta_a
                tau_c = Calculate_communication_timestamp(t_rs, tau_b, t_b, L)
                tau_f = Calculate_feedfoword_timestamp(tau_c, t_rs, t_ag, t_f, L)
                S_bc[n][1] = max(S_bc[n][1] - T_ar[n] / 2, 0)
                S_fc[n][1] = max(S_fc[n][1] - T_ar[n] / 2, 0)
        if n < L - 1:
            S_bc[n + 1][1] = S_bc[n][1] + tau_c[n] - (tau_c[n + 1] + t_rs[n + 1])
            S_fc[n + 1][1] = S_fc[n][1] - tau_f[n] + (tau_f[n - 1] + t_f[n - 1])
            S[n + 1][1] = S_bc[n + 1][1] + S_fc[n + 1][1]

    schedule_order = List.print_link()
    # print('PipeDAP:', tau_f[L - 1] + t_f[L - 1])
    # print('t_b + t_f:', sum(t_b)+sum(t_f))
    return schedule_order


# if __name__ == '__main__':
#     # choose dnn
#     # dnn = 'resnet50'
#     # dnn = 'vgg16'
#     # dnn = 'densenet201'
#     dnn = 'bert_base'
#     start = time.time()
#     schedule_order = PipeDAP(dnn)
#     print('time:', time.time() - start)
#     print('schedule_order:', schedule_order)



































